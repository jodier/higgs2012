#include "MuonMomentumCorrections/SmearingClass.h"
#include "MuonMomentumCorrections/MuonResolutionAndMomentumScaleFactors.h"
//
// File generated by /cern/root/root_v5.32.00_64/bin/rootcint at Tue Mar 12 16:06:44 2013

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME dOdOdIobjdIMuonMomentumCorrections_Dict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "MuonMomentumCorrections_Dict.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
      namespace Analysis {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::Analysis::MuonResolutionAndMomentumScaleFactors MuonResolutionAndMomentumScaleFactors;
      #else
      class MuonResolutionAndMomentumScaleFactors  {
         public:
         //friend XX;
         vector< double > m_eta_min; //
         vector< double > m_eta_max; //
         vector< double > m_res_SF_CB; //
         vector< double > m_res_SF_CB_err; //
         vector< double > m_mom_SF_CB; //
         vector< double > m_mom_SF_CB_err; //
         vector< double > m_res_SF_ID; //
         vector< double > m_res_SF_ID_err; //
         vector< double > m_mom_SF_ID; //
         vector< double > m_mom_SF_ID_err; //
         vector< double > m_res_SF_SA; //
         vector< double > m_res_SF_SA_err; //
         vector< double > m_mom_SF_SA; //
         vector< double > m_mom_SF_SA_err; //
      };
      #endif
      } 
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace MuonSmear {
   namespace ROOT {
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance();
      static void MuonSmear_Dictionary();

      // Function generating the singleton type initializer
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance()
      {
         static ::ROOT::TGenericClassInfo 
            instance("MuonSmear", 0 /*version*/, "../MuonMomentumCorrections/SmearingClass.h", 27,
                     ::ROOT::DefineBehavior((void*)0,(void*)0),
                     &MuonSmear_Dictionary, 0);
         return &instance;
      }
      // Insure that the inline function is _not_ optimized away by the compiler
      ::ROOT::TGenericClassInfo *(*_R__UNIQUE_(InitFunctionKeeper))() = &GenerateInitInstance;  
      // Static variable to force the class initialization
      static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance(); R__UseDummy(_R__UNIQUE_(Init));

      // Dictionary for non-ClassDef classes
      static void MuonSmear_Dictionary() {
         GenerateInitInstance()->GetClass();
      }

   }
}

namespace ROOT {
   void MuonSmearcLcLSmearingClass_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MuonSmearcLcLSmearingClass(void *p = 0);
   static void *newArray_MuonSmearcLcLSmearingClass(Long_t size, void *p);
   static void delete_MuonSmearcLcLSmearingClass(void *p);
   static void deleteArray_MuonSmearcLcLSmearingClass(void *p);
   static void destruct_MuonSmearcLcLSmearingClass(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::MuonSmear::SmearingClass*)
   {
      ::MuonSmear::SmearingClass *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MuonSmear::SmearingClass >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MuonSmear::SmearingClass", ::MuonSmear::SmearingClass::Class_Version(), "../MuonMomentumCorrections/SmearingClass.h", 72,
                  typeid(::MuonSmear::SmearingClass), DefineBehavior(ptr, ptr),
                  &::MuonSmear::SmearingClass::Dictionary, isa_proxy, 4,
                  sizeof(::MuonSmear::SmearingClass) );
      instance.SetNew(&new_MuonSmearcLcLSmearingClass);
      instance.SetNewArray(&newArray_MuonSmearcLcLSmearingClass);
      instance.SetDelete(&delete_MuonSmearcLcLSmearingClass);
      instance.SetDeleteArray(&deleteArray_MuonSmearcLcLSmearingClass);
      instance.SetDestructor(&destruct_MuonSmearcLcLSmearingClass);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::MuonSmear::SmearingClass*)
   {
      return GenerateInitInstanceLocal((::MuonSmear::SmearingClass*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MuonSmear::SmearingClass*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace Analysis {
   namespace ROOT {
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance();
      static void Analysis_Dictionary();

      // Function generating the singleton type initializer
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance()
      {
         static ::ROOT::TGenericClassInfo 
            instance("Analysis", 0 /*version*/, "../MuonMomentumCorrections/MuonResolutionAndMomentumScaleFactors.h", 34,
                     ::ROOT::DefineBehavior((void*)0,(void*)0),
                     &Analysis_Dictionary, 0);
         return &instance;
      }
      // Insure that the inline function is _not_ optimized away by the compiler
      ::ROOT::TGenericClassInfo *(*_R__UNIQUE_(InitFunctionKeeper))() = &GenerateInitInstance;  
      // Static variable to force the class initialization
      static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance(); R__UseDummy(_R__UNIQUE_(Init));

      // Dictionary for non-ClassDef classes
      static void Analysis_Dictionary() {
         GenerateInitInstance()->GetClass();
      }

   }
}

namespace ROOT {
   void AnalysiscLcLMuonResolutionAndMomentumScaleFactors_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void AnalysiscLcLMuonResolutionAndMomentumScaleFactors_Dictionary();
   static void delete_AnalysiscLcLMuonResolutionAndMomentumScaleFactors(void *p);
   static void deleteArray_AnalysiscLcLMuonResolutionAndMomentumScaleFactors(void *p);
   static void destruct_AnalysiscLcLMuonResolutionAndMomentumScaleFactors(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::Analysis::MuonResolutionAndMomentumScaleFactors*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::Analysis::MuonResolutionAndMomentumScaleFactors) == sizeof(::ROOT::Shadow::Analysis::MuonResolutionAndMomentumScaleFactors));
      ::Analysis::MuonResolutionAndMomentumScaleFactors *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::Analysis::MuonResolutionAndMomentumScaleFactors),0);
      static ::ROOT::TGenericClassInfo 
         instance("Analysis::MuonResolutionAndMomentumScaleFactors", "../MuonMomentumCorrections/MuonResolutionAndMomentumScaleFactors.h", 36,
                  typeid(::Analysis::MuonResolutionAndMomentumScaleFactors), DefineBehavior(ptr, ptr),
                  &AnalysiscLcLMuonResolutionAndMomentumScaleFactors_ShowMembers, &AnalysiscLcLMuonResolutionAndMomentumScaleFactors_Dictionary, isa_proxy, 4,
                  sizeof(::Analysis::MuonResolutionAndMomentumScaleFactors) );
      instance.SetDelete(&delete_AnalysiscLcLMuonResolutionAndMomentumScaleFactors);
      instance.SetDeleteArray(&deleteArray_AnalysiscLcLMuonResolutionAndMomentumScaleFactors);
      instance.SetDestructor(&destruct_AnalysiscLcLMuonResolutionAndMomentumScaleFactors);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::Analysis::MuonResolutionAndMomentumScaleFactors*)
   {
      return GenerateInitInstanceLocal((::Analysis::MuonResolutionAndMomentumScaleFactors*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Analysis::MuonResolutionAndMomentumScaleFactors*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void AnalysiscLcLMuonResolutionAndMomentumScaleFactors_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::Analysis::MuonResolutionAndMomentumScaleFactors*)0x0)->GetClass();
   }

} // end of namespace ROOT

      namespace MuonSmear {
//______________________________________________________________________________
TClass *SmearingClass::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *SmearingClass::Class_Name()
{
   return "MuonSmear::SmearingClass";
}

//______________________________________________________________________________
const char *SmearingClass::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MuonSmear::SmearingClass*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int SmearingClass::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MuonSmear::SmearingClass*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void SmearingClass::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MuonSmear::SmearingClass*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *SmearingClass::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MuonSmear::SmearingClass*)0x0)->GetClass();
   return fgIsA;
}

} // namespace MuonSmear
      namespace MuonSmear {
//______________________________________________________________________________
void SmearingClass::Streamer(TBuffer &R__b)
{
   // Stream an object of class MuonSmear::SmearingClass.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MuonSmear::SmearingClass::Class(),this);
   } else {
      R__b.WriteClassBuffer(MuonSmear::SmearingClass::Class(),this);
   }
}

} // namespace MuonSmear
//______________________________________________________________________________
      namespace MuonSmear {
void SmearingClass::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MuonSmear::SmearingClass.
      TClass *R__cl = ::MuonSmear::SmearingClass::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ptms", &ptms);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ptid", &ptid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ptcb", &ptcb);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eta", &eta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phi", &phi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "charge", &charge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vms", &vms);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vid", &vid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "corr", &corr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "smearDeltaMS", &smearDeltaMS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "smearDeltaID", &smearDeltaID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "smearDeltaCB", &smearDeltaCB);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "useTan2", &useTan2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "detRegion", &detRegion);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "scaleRegion", &scaleRegion);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "GeV", &GeV);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "g1", &g1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "g2", &g2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "g3", &g3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "g4", &g4);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "wMS", &wMS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "wID", &wID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "useScale", &useScale);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "restrictCurvCorrSigma", &restrictCurvCorrSigma);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "InValues", (void*)&InValues);
      R__insp.InspectMember("ifstream", (void*)&InValues, "InValues.", true);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "useImprovedCombine", &useImprovedCombine);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "apply_to_data", &apply_to_data);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_CallSetClass", &m_CallSetClass);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_pTmax", &m_pTmax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_DataYear", (void*)&m_DataYear);
      R__insp.InspectMember("string", (void*)&m_DataYear, "m_DataYear.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_Fdir", (void*)&m_Fdir);
      R__insp.InspectMember("string", (void*)&m_Fdir, "m_Fdir.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_Release", (void*)&m_Release);
      R__insp.InspectMember("string", (void*)&m_Release, "m_Release.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_ScaleType", (void*)&m_ScaleType);
      R__insp.InspectMember("string", (void*)&m_ScaleType, "m_ScaleType.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Tsmear", &Tsmear);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Tscale", &Tscale);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Tdet", &Tdet);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Tfun", &Tfun);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Tdata", &Tdata);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Trel", &Trel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Talgo", &Talgo);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_Algorithm", (void*)&m_Algorithm);
      R__insp.InspectMember("string", (void*)&m_Algorithm, "m_Algorithm.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_scale_ID", (void*)&m_scale_ID);
      R__insp.InspectMember("vector<double>", (void*)&m_scale_ID, "m_scale_ID.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_scaleSyst_ID", (void*)&m_scaleSyst_ID);
      R__insp.InspectMember("vector<double>", (void*)&m_scaleSyst_ID, "m_scaleSyst_ID.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_scale_MS", (void*)&m_scale_MS);
      R__insp.InspectMember("vector<double>", (void*)&m_scale_MS, "m_scale_MS.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_scaleSyst_MS", (void*)&m_scaleSyst_MS);
      R__insp.InspectMember("vector<double>", (void*)&m_scaleSyst_MS, "m_scaleSyst_MS.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_scale_CB", (void*)&m_scale_CB);
      R__insp.InspectMember("vector<double>", (void*)&m_scale_CB, "m_scale_CB.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_scaleSyst_CB", (void*)&m_scaleSyst_CB);
      R__insp.InspectMember("vector<double>", (void*)&m_scaleSyst_CB, "m_scaleSyst_CB.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_scaleBins", (void*)&m_scaleBins);
      R__insp.InspectMember("vector<double>", (void*)&m_scaleBins, "m_scaleBins.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_S1_ID", (void*)&m_S1_ID);
      R__insp.InspectMember("vector<double>", (void*)&m_S1_ID, "m_S1_ID.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_S2_ID", (void*)&m_S2_ID);
      R__insp.InspectMember("vector<double>", (void*)&m_S2_ID, "m_S2_ID.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_S1_MS", (void*)&m_S1_MS);
      R__insp.InspectMember("vector<double>", (void*)&m_S1_MS, "m_S1_MS.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_S2_MS", (void*)&m_S2_MS);
      R__insp.InspectMember("vector<double>", (void*)&m_S2_MS, "m_S2_MS.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_S1_CB", (void*)&m_S1_CB);
      R__insp.InspectMember("vector<double>", (void*)&m_S1_CB, "m_S1_CB.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_S2_CB", (void*)&m_S2_CB);
      R__insp.InspectMember("vector<double>", (void*)&m_S2_CB, "m_S2_CB.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_S1Corr_ID", (void*)&m_S1Corr_ID);
      R__insp.InspectMember("vector<double>", (void*)&m_S1Corr_ID, "m_S1Corr_ID.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_S2Corr_ID", (void*)&m_S2Corr_ID);
      R__insp.InspectMember("vector<double>", (void*)&m_S2Corr_ID, "m_S2Corr_ID.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_S1Corr_MS", (void*)&m_S1Corr_MS);
      R__insp.InspectMember("vector<double>", (void*)&m_S1Corr_MS, "m_S1Corr_MS.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_S2Corr_MS", (void*)&m_S2Corr_MS);
      R__insp.InspectMember("vector<double>", (void*)&m_S2Corr_MS, "m_S2Corr_MS.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_S1Corr_CB", (void*)&m_S1Corr_CB);
      R__insp.InspectMember("vector<double>", (void*)&m_S1Corr_CB, "m_S1Corr_CB.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_S2Corr_CB", (void*)&m_S2Corr_CB);
      R__insp.InspectMember("vector<double>", (void*)&m_S2Corr_CB, "m_S2Corr_CB.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_S1ACorr_ID", (void*)&m_S1ACorr_ID);
      R__insp.InspectMember("vector<double>", (void*)&m_S1ACorr_ID, "m_S1ACorr_ID.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_S2ACorr_ID", (void*)&m_S2ACorr_ID);
      R__insp.InspectMember("vector<double>", (void*)&m_S2ACorr_ID, "m_S2ACorr_ID.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_S1ACorr_MS", (void*)&m_S1ACorr_MS);
      R__insp.InspectMember("vector<double>", (void*)&m_S1ACorr_MS, "m_S1ACorr_MS.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_S2ACorr_MS", (void*)&m_S2ACorr_MS);
      R__insp.InspectMember("vector<double>", (void*)&m_S2ACorr_MS, "m_S2ACorr_MS.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_S1ACorr_CB", (void*)&m_S1ACorr_CB);
      R__insp.InspectMember("vector<double>", (void*)&m_S1ACorr_CB, "m_S1ACorr_CB.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_S2ACorr_CB", (void*)&m_S2ACorr_CB);
      R__insp.InspectMember("vector<double>", (void*)&m_S2ACorr_CB, "m_S2ACorr_CB.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_p1_ID", (void*)&m_p1_ID);
      R__insp.InspectMember("vector<double>", (void*)&m_p1_ID, "m_p1_ID.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_p2_ID", (void*)&m_p2_ID);
      R__insp.InspectMember("vector<double>", (void*)&m_p2_ID, "m_p2_ID.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_p2_ID_TAN", (void*)&m_p2_ID_TAN);
      R__insp.InspectMember("vector<double>", (void*)&m_p2_ID_TAN, "m_p2_ID_TAN.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_p1_MS", (void*)&m_p1_MS);
      R__insp.InspectMember("vector<double>", (void*)&m_p1_MS, "m_p1_MS.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_p2_MS", (void*)&m_p2_MS);
      R__insp.InspectMember("vector<double>", (void*)&m_p2_MS, "m_p2_MS.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_E_p1_ID", (void*)&m_E_p1_ID);
      R__insp.InspectMember("vector<double>", (void*)&m_E_p1_ID, "m_E_p1_ID.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_E_p2_ID", (void*)&m_E_p2_ID);
      R__insp.InspectMember("vector<double>", (void*)&m_E_p2_ID, "m_E_p2_ID.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_E_p2_ID_TAN", (void*)&m_E_p2_ID_TAN);
      R__insp.InspectMember("vector<double>", (void*)&m_E_p2_ID_TAN, "m_E_p2_ID_TAN.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_E_p1_MS", (void*)&m_E_p1_MS);
      R__insp.InspectMember("vector<double>", (void*)&m_E_p1_MS, "m_E_p1_MS.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_E_p2_MS", (void*)&m_E_p2_MS);
      R__insp.InspectMember("vector<double>", (void*)&m_E_p2_MS, "m_E_p2_MS.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_S_p1_ID", (void*)&m_S_p1_ID);
      R__insp.InspectMember("vector<double>", (void*)&m_S_p1_ID, "m_S_p1_ID.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_S_p2_ID", (void*)&m_S_p2_ID);
      R__insp.InspectMember("vector<double>", (void*)&m_S_p2_ID, "m_S_p2_ID.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_S_p2_ID_TAN", (void*)&m_S_p2_ID_TAN);
      R__insp.InspectMember("vector<double>", (void*)&m_S_p2_ID_TAN, "m_S_p2_ID_TAN.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_S_p1_MS", (void*)&m_S_p1_MS);
      R__insp.InspectMember("vector<double>", (void*)&m_S_p1_MS, "m_S_p1_MS.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_S_p2_MS", (void*)&m_S_p2_MS);
      R__insp.InspectMember("vector<double>", (void*)&m_S_p2_MS, "m_S_p2_MS.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_MC_p1_ID", (void*)&m_MC_p1_ID);
      R__insp.InspectMember("vector<double>", (void*)&m_MC_p1_ID, "m_MC_p1_ID.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_MC_p2_ID", (void*)&m_MC_p2_ID);
      R__insp.InspectMember("vector<double>", (void*)&m_MC_p2_ID, "m_MC_p2_ID.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_MC_p2_ID_TAN", (void*)&m_MC_p2_ID_TAN);
      R__insp.InspectMember("vector<double>", (void*)&m_MC_p2_ID_TAN, "m_MC_p2_ID_TAN.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_MC_p0_MS", (void*)&m_MC_p0_MS);
      R__insp.InspectMember("vector<double>", (void*)&m_MC_p0_MS, "m_MC_p0_MS.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_MC_p1_MS", (void*)&m_MC_p1_MS);
      R__insp.InspectMember("vector<double>", (void*)&m_MC_p1_MS, "m_MC_p1_MS.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_MC_p2_MS", (void*)&m_MC_p2_MS);
      R__insp.InspectMember("vector<double>", (void*)&m_MC_p2_MS, "m_MC_p2_MS.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_CorrMatC0", (void*)&m_CorrMatC0);
      R__insp.InspectMember("vector<double>", (void*)&m_CorrMatC0, "m_CorrMatC0.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_CorrMatC1", (void*)&m_CorrMatC1);
      R__insp.InspectMember("vector<double>", (void*)&m_CorrMatC1, "m_CorrMatC1.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_CorrMatC2", (void*)&m_CorrMatC2);
      R__insp.InspectMember("vector<double>", (void*)&m_CorrMatC2, "m_CorrMatC2.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_CorrMatC3", (void*)&m_CorrMatC3);
      R__insp.InspectMember("vector<double>", (void*)&m_CorrMatC3, "m_CorrMatC3.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_CorrMatC4", (void*)&m_CorrMatC4);
      R__insp.InspectMember("vector<double>", (void*)&m_CorrMatC4, "m_CorrMatC4.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_CorrMatC5", (void*)&m_CorrMatC5);
      R__insp.InspectMember("vector<double>", (void*)&m_CorrMatC5, "m_CorrMatC5.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_CorrMatTanC0", (void*)&m_CorrMatTanC0);
      R__insp.InspectMember("vector<double>", (void*)&m_CorrMatTanC0, "m_CorrMatTanC0.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_CorrMatTanC1", (void*)&m_CorrMatTanC1);
      R__insp.InspectMember("vector<double>", (void*)&m_CorrMatTanC1, "m_CorrMatTanC1.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_CorrMatTanC2", (void*)&m_CorrMatTanC2);
      R__insp.InspectMember("vector<double>", (void*)&m_CorrMatTanC2, "m_CorrMatTanC2.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_CorrMatTanC3", (void*)&m_CorrMatTanC3);
      R__insp.InspectMember("vector<double>", (void*)&m_CorrMatTanC3, "m_CorrMatTanC3.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_CorrMatTanC4", (void*)&m_CorrMatTanC4);
      R__insp.InspectMember("vector<double>", (void*)&m_CorrMatTanC4, "m_CorrMatTanC4.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_CorrMatTanC5", (void*)&m_CorrMatTanC5);
      R__insp.InspectMember("vector<double>", (void*)&m_CorrMatTanC5, "m_CorrMatTanC5.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_nb_regions", &m_nb_regions);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_eta_min", (void*)&m_eta_min);
      R__insp.InspectMember("vector<float>", (void*)&m_eta_min, "m_eta_min.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_eta_max", (void*)&m_eta_max);
      R__insp.InspectMember("vector<float>", (void*)&m_eta_max, "m_eta_max.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_phi_min", (void*)&m_phi_min);
      R__insp.InspectMember("vector<float>", (void*)&m_phi_min, "m_phi_min.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_phi_max", (void*)&m_phi_max);
      R__insp.InspectMember("vector<float>", (void*)&m_phi_max, "m_phi_max.", false);
}

} // namespace MuonSmear
namespace ROOT {
   // Wrappers around operator new
   static void *new_MuonSmearcLcLSmearingClass(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::MuonSmear::SmearingClass : new ::MuonSmear::SmearingClass;
   }
   static void *newArray_MuonSmearcLcLSmearingClass(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::MuonSmear::SmearingClass[nElements] : new ::MuonSmear::SmearingClass[nElements];
   }
   // Wrapper around operator delete
   static void delete_MuonSmearcLcLSmearingClass(void *p) {
      delete ((::MuonSmear::SmearingClass*)p);
   }
   static void deleteArray_MuonSmearcLcLSmearingClass(void *p) {
      delete [] ((::MuonSmear::SmearingClass*)p);
   }
   static void destruct_MuonSmearcLcLSmearingClass(void *p) {
      typedef ::MuonSmear::SmearingClass current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::MuonSmear::SmearingClass

//______________________________________________________________________________
namespace ROOT {
   void AnalysiscLcLMuonResolutionAndMomentumScaleFactors_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class Analysis::MuonResolutionAndMomentumScaleFactors.
      typedef ::ROOT::Shadow::Analysis::MuonResolutionAndMomentumScaleFactors ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::Analysis::MuonResolutionAndMomentumScaleFactors*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_eta_min", (void*)&sobj->m_eta_min);
      R__insp.InspectMember("vector<double>", (void*)&sobj->m_eta_min, "m_eta_min.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_eta_max", (void*)&sobj->m_eta_max);
      R__insp.InspectMember("vector<double>", (void*)&sobj->m_eta_max, "m_eta_max.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_res_SF_CB", (void*)&sobj->m_res_SF_CB);
      R__insp.InspectMember("vector<double>", (void*)&sobj->m_res_SF_CB, "m_res_SF_CB.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_res_SF_CB_err", (void*)&sobj->m_res_SF_CB_err);
      R__insp.InspectMember("vector<double>", (void*)&sobj->m_res_SF_CB_err, "m_res_SF_CB_err.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_mom_SF_CB", (void*)&sobj->m_mom_SF_CB);
      R__insp.InspectMember("vector<double>", (void*)&sobj->m_mom_SF_CB, "m_mom_SF_CB.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_mom_SF_CB_err", (void*)&sobj->m_mom_SF_CB_err);
      R__insp.InspectMember("vector<double>", (void*)&sobj->m_mom_SF_CB_err, "m_mom_SF_CB_err.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_res_SF_ID", (void*)&sobj->m_res_SF_ID);
      R__insp.InspectMember("vector<double>", (void*)&sobj->m_res_SF_ID, "m_res_SF_ID.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_res_SF_ID_err", (void*)&sobj->m_res_SF_ID_err);
      R__insp.InspectMember("vector<double>", (void*)&sobj->m_res_SF_ID_err, "m_res_SF_ID_err.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_mom_SF_ID", (void*)&sobj->m_mom_SF_ID);
      R__insp.InspectMember("vector<double>", (void*)&sobj->m_mom_SF_ID, "m_mom_SF_ID.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_mom_SF_ID_err", (void*)&sobj->m_mom_SF_ID_err);
      R__insp.InspectMember("vector<double>", (void*)&sobj->m_mom_SF_ID_err, "m_mom_SF_ID_err.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_res_SF_SA", (void*)&sobj->m_res_SF_SA);
      R__insp.InspectMember("vector<double>", (void*)&sobj->m_res_SF_SA, "m_res_SF_SA.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_res_SF_SA_err", (void*)&sobj->m_res_SF_SA_err);
      R__insp.InspectMember("vector<double>", (void*)&sobj->m_res_SF_SA_err, "m_res_SF_SA_err.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_mom_SF_SA", (void*)&sobj->m_mom_SF_SA);
      R__insp.InspectMember("vector<double>", (void*)&sobj->m_mom_SF_SA, "m_mom_SF_SA.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_mom_SF_SA_err", (void*)&sobj->m_mom_SF_SA_err);
      R__insp.InspectMember("vector<double>", (void*)&sobj->m_mom_SF_SA_err, "m_mom_SF_SA_err.", false);
   }

}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_AnalysiscLcLMuonResolutionAndMomentumScaleFactors(void *p) {
      delete ((::Analysis::MuonResolutionAndMomentumScaleFactors*)p);
   }
   static void deleteArray_AnalysiscLcLMuonResolutionAndMomentumScaleFactors(void *p) {
      delete [] ((::Analysis::MuonResolutionAndMomentumScaleFactors*)p);
   }
   static void destruct_AnalysiscLcLMuonResolutionAndMomentumScaleFactors(void *p) {
      typedef ::Analysis::MuonResolutionAndMomentumScaleFactors current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::Analysis::MuonResolutionAndMomentumScaleFactors

namespace ROOT {
   void vectorlEdoublegR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEdoublegR_Dictionary();
   static void *new_vectorlEdoublegR(void *p = 0);
   static void *newArray_vectorlEdoublegR(Long_t size, void *p);
   static void delete_vectorlEdoublegR(void *p);
   static void deleteArray_vectorlEdoublegR(void *p);
   static void destruct_vectorlEdoublegR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<double>*)
   {
      vector<double> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<double>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<double>", -2, "vector.dll", 0,
                  typeid(vector<double>), DefineBehavior(ptr, ptr),
                  0, &vectorlEdoublegR_Dictionary, isa_proxy, 0,
                  sizeof(vector<double>) );
      instance.SetNew(&new_vectorlEdoublegR);
      instance.SetNewArray(&newArray_vectorlEdoublegR);
      instance.SetDelete(&delete_vectorlEdoublegR);
      instance.SetDeleteArray(&deleteArray_vectorlEdoublegR);
      instance.SetDestructor(&destruct_vectorlEdoublegR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<double> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<double>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEdoublegR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<double>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEdoublegR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<double> : new vector<double>;
   }
   static void *newArray_vectorlEdoublegR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<double>[nElements] : new vector<double>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEdoublegR(void *p) {
      delete ((vector<double>*)p);
   }
   static void deleteArray_vectorlEdoublegR(void *p) {
      delete [] ((vector<double>*)p);
   }
   static void destruct_vectorlEdoublegR(void *p) {
      typedef vector<double> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<double>

namespace ROOT {
   void vectorlEfloatgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEfloatgR_Dictionary();
   static void *new_vectorlEfloatgR(void *p = 0);
   static void *newArray_vectorlEfloatgR(Long_t size, void *p);
   static void delete_vectorlEfloatgR(void *p);
   static void deleteArray_vectorlEfloatgR(void *p);
   static void destruct_vectorlEfloatgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<float>*)
   {
      vector<float> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<float>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<float>", -2, "vector.dll", 0,
                  typeid(vector<float>), DefineBehavior(ptr, ptr),
                  0, &vectorlEfloatgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<float>) );
      instance.SetNew(&new_vectorlEfloatgR);
      instance.SetNewArray(&newArray_vectorlEfloatgR);
      instance.SetDelete(&delete_vectorlEfloatgR);
      instance.SetDeleteArray(&deleteArray_vectorlEfloatgR);
      instance.SetDestructor(&destruct_vectorlEfloatgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<float> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<float>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEfloatgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<float>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEfloatgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<float> : new vector<float>;
   }
   static void *newArray_vectorlEfloatgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<float>[nElements] : new vector<float>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEfloatgR(void *p) {
      delete ((vector<float>*)p);
   }
   static void deleteArray_vectorlEfloatgR(void *p) {
      delete [] ((vector<float>*)p);
   }
   static void destruct_vectorlEfloatgR(void *p) {
      typedef vector<float> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<float>

/********************************************************
* ../obj/MuonMomentumCorrections_Dict.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableMuonMomentumCorrections_Dict();

extern "C" void G__set_cpp_environmentMuonMomentumCorrections_Dict() {
  G__cpp_reset_tagtableMuonMomentumCorrections_Dict();
}
#include <new>
extern "C" int G__cpp_dllrevMuonMomentumCorrections_Dict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* MuonSmear */

/* MuonSmear::SmearingClass */
static int G__MuonMomentumCorrections_Dict_261_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MuonSmear::SmearingClass* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MuonSmear::SmearingClass[n];
     } else {
       p = new((void*) gvp) MuonSmear::SmearingClass[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MuonSmear::SmearingClass;
     } else {
       p = new((void*) gvp) MuonSmear::SmearingClass;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_MuonSmearcLcLSmearingClass));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonMomentumCorrections_Dict_261_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MuonSmear::SmearingClass* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MuonSmear::SmearingClass(
*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1]))
, *((string*) G__int(libp->para[2])), *((string*) G__int(libp->para[3]))
, *((string*) G__int(libp->para[4])));
     } else {
       p = new((void*) gvp) MuonSmear::SmearingClass(
*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1]))
, *((string*) G__int(libp->para[2])), *((string*) G__int(libp->para[3]))
, *((string*) G__int(libp->para[4])));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MuonSmear::SmearingClass(
*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1]))
, *((string*) G__int(libp->para[2])), *((string*) G__int(libp->para[3])));
     } else {
       p = new((void*) gvp) MuonSmear::SmearingClass(
*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1]))
, *((string*) G__int(libp->para[2])), *((string*) G__int(libp->para[3])));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MuonSmear::SmearingClass(
*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1]))
, *((string*) G__int(libp->para[2])));
     } else {
       p = new((void*) gvp) MuonSmear::SmearingClass(
*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1]))
, *((string*) G__int(libp->para[2])));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MuonSmear::SmearingClass(*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1])));
     } else {
       p = new((void*) gvp) MuonSmear::SmearingClass(*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1])));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MuonSmear::SmearingClass(*((string*) G__int(libp->para[0])));
     } else {
       p = new((void*) gvp) MuonSmear::SmearingClass(*((string*) G__int(libp->para[0])));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_MuonSmearcLcLSmearingClass));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonMomentumCorrections_Dict_261_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MuonSmear::SmearingClass* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new MuonSmear::SmearingClass(*(MuonSmear::SmearingClass*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) MuonSmear::SmearingClass(*(MuonSmear::SmearingClass*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_MuonSmearcLcLSmearingClass));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonMomentumCorrections_Dict_261_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MuonSmear::SmearingClass*) G__getstructoffset())->SetSeed((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonMomentumCorrections_Dict_261_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((MuonSmear::SmearingClass*) G__getstructoffset())->SetSeed((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((MuonSmear::SmearingClass*) G__getstructoffset())->SetSeed((int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonMomentumCorrections_Dict_261_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MuonSmear::SmearingClass*) G__getstructoffset())->UseTan2((bool) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonMomentumCorrections_Dict_261_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MuonSmear::SmearingClass*) G__getstructoffset())->UseGeV();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonMomentumCorrections_Dict_261_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MuonSmear::SmearingClass*) G__getstructoffset())->UseScale((bool) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonMomentumCorrections_Dict_261_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((MuonSmear::SmearingClass*) G__getstructoffset())->RestrictCurvatureCorrections((double) G__double(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((MuonSmear::SmearingClass*) G__getstructoffset())->RestrictCurvatureCorrections();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonMomentumCorrections_Dict_261_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MuonSmear::SmearingClass*) G__getstructoffset())->UseImprovedCombine();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonMomentumCorrections_Dict_261_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((MuonSmear::SmearingClass*) G__getstructoffset())->ApplyToData((bool) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((MuonSmear::SmearingClass*) G__getstructoffset())->ApplyToData();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonMomentumCorrections_Dict_261_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 5:
      ((MuonSmear::SmearingClass*) G__getstructoffset())->SetAlgoSmearRelDir(*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1]))
, *((string*) G__int(libp->para[2])), *((string*) G__int(libp->para[3]))
, *((string*) G__int(libp->para[4])));
      G__setnull(result7);
      break;
   case 4:
      ((MuonSmear::SmearingClass*) G__getstructoffset())->SetAlgoSmearRelDir(*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1]))
, *((string*) G__int(libp->para[2])), *((string*) G__int(libp->para[3])));
      G__setnull(result7);
      break;
   case 3:
      ((MuonSmear::SmearingClass*) G__getstructoffset())->SetAlgoSmearRelDir(*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1]))
, *((string*) G__int(libp->para[2])));
      G__setnull(result7);
      break;
   case 2:
      ((MuonSmear::SmearingClass*) G__getstructoffset())->SetAlgoSmearRelDir(*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1])));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonMomentumCorrections_Dict_261_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MuonSmear::SmearingClass*) G__getstructoffset())->SetRegions();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonMomentumCorrections_Dict_261_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MuonSmear::SmearingClass*) G__getstructoffset())->FillValues();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonMomentumCorrections_Dict_261_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((MuonSmear::SmearingClass*) G__getstructoffset())->FillScales(*((string*) G__int(libp->para[0])), (bool) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((MuonSmear::SmearingClass*) G__getstructoffset())->FillScales(*((string*) G__int(libp->para[0])));
      G__setnull(result7);
      break;
   case 0:
      ((MuonSmear::SmearingClass*) G__getstructoffset())->FillScales();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonMomentumCorrections_Dict_261_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MuonSmear::SmearingClass*) G__getstructoffset())->PrintValues();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonMomentumCorrections_Dict_261_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((MuonSmear::SmearingClass*) G__getstructoffset())->Event(*(TLorentzVector*) libp->para[0].ref, *((string*) G__int(libp->para[1]))
, (double) G__double(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((MuonSmear::SmearingClass*) G__getstructoffset())->Event(*(TLorentzVector*) libp->para[0].ref, *((string*) G__int(libp->para[1])));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonMomentumCorrections_Dict_261_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 5:
      ((MuonSmear::SmearingClass*) G__getstructoffset())->Event((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, *((string*) G__int(libp->para[2])), (double) G__double(libp->para[3])
, (double) G__double(libp->para[4]));
      G__setnull(result7);
      break;
   case 4:
      ((MuonSmear::SmearingClass*) G__getstructoffset())->Event((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, *((string*) G__int(libp->para[2])), (double) G__double(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((MuonSmear::SmearingClass*) G__getstructoffset())->Event((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, *((string*) G__int(libp->para[2])));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonMomentumCorrections_Dict_261_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      ((MuonSmear::SmearingClass*) G__getstructoffset())->Event(*(TLorentzVector*) libp->para[0].ref, *(TLorentzVector*) libp->para[1].ref
, *(TLorentzVector*) libp->para[2].ref, (double) G__double(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((MuonSmear::SmearingClass*) G__getstructoffset())->Event(*(TLorentzVector*) libp->para[0].ref, *(TLorentzVector*) libp->para[1].ref
, *(TLorentzVector*) libp->para[2].ref);
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonMomentumCorrections_Dict_261_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 6:
      ((MuonSmear::SmearingClass*) G__getstructoffset())->Event((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (double) G__double(libp->para[4]), (double) G__double(libp->para[5]));
      G__setnull(result7);
      break;
   case 5:
      ((MuonSmear::SmearingClass*) G__getstructoffset())->Event((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (double) G__double(libp->para[4]));
      G__setnull(result7);
      break;
   case 4:
      ((MuonSmear::SmearingClass*) G__getstructoffset())->Event((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonMomentumCorrections_Dict_261_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MuonSmear::SmearingClass*) G__getstructoffset())->Event();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonMomentumCorrections_Dict_261_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((MuonSmear::SmearingClass*) G__getstructoffset())->Smearing((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonMomentumCorrections_Dict_261_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((MuonSmear::SmearingClass*) G__getstructoffset())->SmearingSYSVar((int) G__int(libp->para[0]), (double) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonMomentumCorrections_Dict_261_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((MuonSmear::SmearingClass*) G__getstructoffset())->ICombine((double) G__double(libp->para[0]), (double) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonMomentumCorrections_Dict_261_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((MuonSmear::SmearingClass*) G__getstructoffset())->Combine((double) G__double(libp->para[0]), (double) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonMomentumCorrections_Dict_261_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((MuonSmear::SmearingClass*) G__getstructoffset())->Combine2((double) G__double(libp->para[0]), (double) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonMomentumCorrections_Dict_261_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letdouble(result7, 100, (double) ((const MuonSmear::SmearingClass*) G__getstructoffset())->ExpectedResolution(*((string*) G__int(libp->para[0])), (bool) G__int(libp->para[1])));
      break;
   case 1:
      G__letdouble(result7, 100, (double) ((const MuonSmear::SmearingClass*) G__getstructoffset())->ExpectedResolution(*((string*) G__int(libp->para[0]))));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonMomentumCorrections_Dict_261_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letdouble(result7, 100, (double) ((const MuonSmear::SmearingClass*) G__getstructoffset())->ExpectedResolution((int) G__int(libp->para[0]), (bool) G__int(libp->para[1])));
      break;
   case 1:
      G__letdouble(result7, 100, (double) ((const MuonSmear::SmearingClass*) G__getstructoffset())->ExpectedResolution((int) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonMomentumCorrections_Dict_261_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MuonSmear::SmearingClass*) G__getstructoffset())->ErrorMatrix();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonMomentumCorrections_Dict_261_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      G__letdouble(result7, 100, (double) ((const MuonSmear::SmearingClass*) G__getstructoffset())->ScaleApply((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])));
      break;
   case 3:
      G__letdouble(result7, 100, (double) ((const MuonSmear::SmearingClass*) G__getstructoffset())->ScaleApply((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonMomentumCorrections_Dict_261_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MuonSmear::SmearingClass*) G__getstructoffset())->ScaleMS((double) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonMomentumCorrections_Dict_261_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MuonSmear::SmearingClass*) G__getstructoffset())->ScaleID((double) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonMomentumCorrections_Dict_261_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const MuonSmear::SmearingClass*) G__getstructoffset())->ScaleCB((double) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonMomentumCorrections_Dict_261_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((MuonSmear::SmearingClass*) G__getstructoffset())->pTMS());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonMomentumCorrections_Dict_261_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letdouble(result7, 100, (double) ((MuonSmear::SmearingClass*) G__getstructoffset())->pTMS((double) G__double(libp->para[0]), (bool) G__int(libp->para[1])));
      break;
   case 1:
      G__letdouble(result7, 100, (double) ((MuonSmear::SmearingClass*) G__getstructoffset())->pTMS((double) G__double(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonMomentumCorrections_Dict_261_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((MuonSmear::SmearingClass*) G__getstructoffset())->pTID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonMomentumCorrections_Dict_261_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letdouble(result7, 100, (double) ((MuonSmear::SmearingClass*) G__getstructoffset())->pTID((double) G__double(libp->para[0]), (bool) G__int(libp->para[1])));
      break;
   case 1:
      G__letdouble(result7, 100, (double) ((MuonSmear::SmearingClass*) G__getstructoffset())->pTID((double) G__double(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonMomentumCorrections_Dict_261_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((MuonSmear::SmearingClass*) G__getstructoffset())->pTCB());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonMomentumCorrections_Dict_261_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letdouble(result7, 100, (double) ((MuonSmear::SmearingClass*) G__getstructoffset())->pTCB((double) G__double(libp->para[0]), (bool) G__int(libp->para[1])));
      break;
   case 1:
      G__letdouble(result7, 100, (double) ((MuonSmear::SmearingClass*) G__getstructoffset())->pTCB((double) G__double(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonMomentumCorrections_Dict_261_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((MuonSmear::SmearingClass*) G__getstructoffset())->ChargeFlip((double) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonMomentumCorrections_Dict_261_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((MuonSmear::SmearingClass*) G__getstructoffset())->ChargeFlipMS());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonMomentumCorrections_Dict_261_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((MuonSmear::SmearingClass*) G__getstructoffset())->ChargeFlipID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonMomentumCorrections_Dict_261_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((MuonSmear::SmearingClass*) G__getstructoffset())->ChargeFlipCB());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonMomentumCorrections_Dict_261_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((MuonSmear::SmearingClass*) G__getstructoffset())->SMS());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonMomentumCorrections_Dict_261_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((MuonSmear::SmearingClass*) G__getstructoffset())->SID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonMomentumCorrections_Dict_261_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((MuonSmear::SmearingClass*) G__getstructoffset())->SCB());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonMomentumCorrections_Dict_261_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((MuonSmear::SmearingClass*) G__getstructoffset())->VMS());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonMomentumCorrections_Dict_261_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((MuonSmear::SmearingClass*) G__getstructoffset())->VID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonMomentumCorrections_Dict_261_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((MuonSmear::SmearingClass*) G__getstructoffset())->Corr());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonMomentumCorrections_Dict_261_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((MuonSmear::SmearingClass*) G__getstructoffset())->MSUP(*(double*) G__Doubleref(&libp->para[0]), (bool) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((MuonSmear::SmearingClass*) G__getstructoffset())->MSUP(*(double*) G__Doubleref(&libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonMomentumCorrections_Dict_261_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      ((MuonSmear::SmearingClass*) G__getstructoffset())->MSUP(*(double*) G__Doubleref(&libp->para[0]), *(double*) G__Doubleref(&libp->para[1])
, *(double*) G__Doubleref(&libp->para[2]), (bool) G__int(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((MuonSmear::SmearingClass*) G__getstructoffset())->MSUP(*(double*) G__Doubleref(&libp->para[0]), *(double*) G__Doubleref(&libp->para[1])
, *(double*) G__Doubleref(&libp->para[2]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonMomentumCorrections_Dict_261_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((MuonSmear::SmearingClass*) G__getstructoffset())->MSLOW(*(double*) G__Doubleref(&libp->para[0]), (bool) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((MuonSmear::SmearingClass*) G__getstructoffset())->MSLOW(*(double*) G__Doubleref(&libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonMomentumCorrections_Dict_261_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      ((MuonSmear::SmearingClass*) G__getstructoffset())->MSLOW(*(double*) G__Doubleref(&libp->para[0]), *(double*) G__Doubleref(&libp->para[1])
, *(double*) G__Doubleref(&libp->para[2]), (bool) G__int(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((MuonSmear::SmearingClass*) G__getstructoffset())->MSLOW(*(double*) G__Doubleref(&libp->para[0]), *(double*) G__Doubleref(&libp->para[1])
, *(double*) G__Doubleref(&libp->para[2]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonMomentumCorrections_Dict_261_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((MuonSmear::SmearingClass*) G__getstructoffset())->IDUP(*(double*) G__Doubleref(&libp->para[0]), (bool) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((MuonSmear::SmearingClass*) G__getstructoffset())->IDUP(*(double*) G__Doubleref(&libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonMomentumCorrections_Dict_261_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      ((MuonSmear::SmearingClass*) G__getstructoffset())->IDUP(*(double*) G__Doubleref(&libp->para[0]), *(double*) G__Doubleref(&libp->para[1])
, *(double*) G__Doubleref(&libp->para[2]), (bool) G__int(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((MuonSmear::SmearingClass*) G__getstructoffset())->IDUP(*(double*) G__Doubleref(&libp->para[0]), *(double*) G__Doubleref(&libp->para[1])
, *(double*) G__Doubleref(&libp->para[2]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonMomentumCorrections_Dict_261_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((MuonSmear::SmearingClass*) G__getstructoffset())->IDLOW(*(double*) G__Doubleref(&libp->para[0]), (bool) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((MuonSmear::SmearingClass*) G__getstructoffset())->IDLOW(*(double*) G__Doubleref(&libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonMomentumCorrections_Dict_261_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      ((MuonSmear::SmearingClass*) G__getstructoffset())->IDLOW(*(double*) G__Doubleref(&libp->para[0]), *(double*) G__Doubleref(&libp->para[1])
, *(double*) G__Doubleref(&libp->para[2]), (bool) G__int(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((MuonSmear::SmearingClass*) G__getstructoffset())->IDLOW(*(double*) G__Doubleref(&libp->para[0]), *(double*) G__Doubleref(&libp->para[1])
, *(double*) G__Doubleref(&libp->para[2]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonMomentumCorrections_Dict_261_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((MuonSmear::SmearingClass*) G__getstructoffset())->SelectFun(*((string*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonMomentumCorrections_Dict_261_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((MuonSmear::SmearingClass*) G__getstructoffset())->SetData(*((string*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonMomentumCorrections_Dict_261_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((MuonSmear::SmearingClass*) G__getstructoffset())->SetAlgorithm(*((string*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonMomentumCorrections_Dict_261_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((MuonSmear::SmearingClass*) G__getstructoffset())->SetRelease(*((string*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonMomentumCorrections_Dict_261_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MuonSmear::SmearingClass*) G__getstructoffset())->PTVar(*(double*) G__Doubleref(&libp->para[0]), *((string*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonMomentumCorrections_Dict_261_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MuonSmear::SmearingClass*) G__getstructoffset())->PTVar(*(double*) G__Doubleref(&libp->para[0]), *(double*) G__Doubleref(&libp->para[1])
, *(double*) G__Doubleref(&libp->para[2]), *((string*) G__int(libp->para[3])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonMomentumCorrections_Dict_261_0_64(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((MuonSmear::SmearingClass*) G__getstructoffset())->Sign((double) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonMomentumCorrections_Dict_261_0_65(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((MuonSmear::SmearingClass*) G__getstructoffset())->ptms_orig());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonMomentumCorrections_Dict_261_0_66(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((MuonSmear::SmearingClass*) G__getstructoffset())->ptid_orig());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonMomentumCorrections_Dict_261_0_67(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((MuonSmear::SmearingClass*) G__getstructoffset())->ptcb_orig());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonMomentumCorrections_Dict_261_0_68(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((MuonSmear::SmearingClass*) G__getstructoffset())->ETA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonMomentumCorrections_Dict_261_0_69(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((MuonSmear::SmearingClass*) G__getstructoffset())->DetRegion());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonMomentumCorrections_Dict_261_0_70(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((MuonSmear::SmearingClass*) G__getstructoffset())->GetScaleRegion());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonMomentumCorrections_Dict_261_0_71(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double>* pobj;
         vector<double> xobj = ((MuonSmear::SmearingClass*) G__getstructoffset())->getScale_ID();
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonMomentumCorrections_Dict_261_0_72(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double>* pobj;
         vector<double> xobj = ((MuonSmear::SmearingClass*) G__getstructoffset())->getScaleSyst_ID();
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonMomentumCorrections_Dict_261_0_73(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double>* pobj;
         vector<double> xobj = ((MuonSmear::SmearingClass*) G__getstructoffset())->getScale_MS();
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonMomentumCorrections_Dict_261_0_74(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double>* pobj;
         vector<double> xobj = ((MuonSmear::SmearingClass*) G__getstructoffset())->getScaleSyst_MS();
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonMomentumCorrections_Dict_261_0_75(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double>* pobj;
         vector<double> xobj = ((MuonSmear::SmearingClass*) G__getstructoffset())->getScale_CB();
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonMomentumCorrections_Dict_261_0_76(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double>* pobj;
         vector<double> xobj = ((MuonSmear::SmearingClass*) G__getstructoffset())->getScaleSyst_CB();
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonMomentumCorrections_Dict_261_0_77(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double>* pobj;
         vector<double> xobj = ((MuonSmear::SmearingClass*) G__getstructoffset())->getp1_ID();
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonMomentumCorrections_Dict_261_0_78(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double>* pobj;
         vector<double> xobj = ((MuonSmear::SmearingClass*) G__getstructoffset())->getp2_ID();
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonMomentumCorrections_Dict_261_0_79(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double>* pobj;
         vector<double> xobj = ((MuonSmear::SmearingClass*) G__getstructoffset())->getp2_ID_TAN();
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonMomentumCorrections_Dict_261_0_80(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double>* pobj;
         vector<double> xobj = ((MuonSmear::SmearingClass*) G__getstructoffset())->getp1_MS();
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonMomentumCorrections_Dict_261_0_81(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double>* pobj;
         vector<double> xobj = ((MuonSmear::SmearingClass*) G__getstructoffset())->getp2_MS();
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonMomentumCorrections_Dict_261_0_82(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double>* pobj;
         vector<double> xobj = ((MuonSmear::SmearingClass*) G__getstructoffset())->getE_p1_ID();
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonMomentumCorrections_Dict_261_0_83(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double>* pobj;
         vector<double> xobj = ((MuonSmear::SmearingClass*) G__getstructoffset())->getE_p2_ID();
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonMomentumCorrections_Dict_261_0_84(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double>* pobj;
         vector<double> xobj = ((MuonSmear::SmearingClass*) G__getstructoffset())->getE_p2_ID_TAN();
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonMomentumCorrections_Dict_261_0_85(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double>* pobj;
         vector<double> xobj = ((MuonSmear::SmearingClass*) G__getstructoffset())->getE_p1_MS();
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonMomentumCorrections_Dict_261_0_86(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double>* pobj;
         vector<double> xobj = ((MuonSmear::SmearingClass*) G__getstructoffset())->getE_p2_MS();
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonMomentumCorrections_Dict_261_0_87(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double>* pobj;
         vector<double> xobj = ((MuonSmear::SmearingClass*) G__getstructoffset())->getS_p1_ID();
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonMomentumCorrections_Dict_261_0_88(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double>* pobj;
         vector<double> xobj = ((MuonSmear::SmearingClass*) G__getstructoffset())->getS_p2_ID();
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonMomentumCorrections_Dict_261_0_89(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double>* pobj;
         vector<double> xobj = ((MuonSmear::SmearingClass*) G__getstructoffset())->getS_p2_ID_TAN();
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonMomentumCorrections_Dict_261_0_90(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double>* pobj;
         vector<double> xobj = ((MuonSmear::SmearingClass*) G__getstructoffset())->getS_p1_MS();
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonMomentumCorrections_Dict_261_0_91(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double>* pobj;
         vector<double> xobj = ((MuonSmear::SmearingClass*) G__getstructoffset())->getS_p2_MS();
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonMomentumCorrections_Dict_261_0_92(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double>* pobj;
         vector<double> xobj = ((MuonSmear::SmearingClass*) G__getstructoffset())->getMC_p1_ID();
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonMomentumCorrections_Dict_261_0_93(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double>* pobj;
         vector<double> xobj = ((MuonSmear::SmearingClass*) G__getstructoffset())->getMC_p2_ID();
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonMomentumCorrections_Dict_261_0_94(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double>* pobj;
         vector<double> xobj = ((MuonSmear::SmearingClass*) G__getstructoffset())->getMC_p2_ID_TAN();
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonMomentumCorrections_Dict_261_0_95(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double>* pobj;
         vector<double> xobj = ((MuonSmear::SmearingClass*) G__getstructoffset())->getMC_p0_MS();
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonMomentumCorrections_Dict_261_0_96(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double>* pobj;
         vector<double> xobj = ((MuonSmear::SmearingClass*) G__getstructoffset())->getMC_p1_MS();
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonMomentumCorrections_Dict_261_0_97(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double>* pobj;
         vector<double> xobj = ((MuonSmear::SmearingClass*) G__getstructoffset())->getMC_p2_MS();
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonMomentumCorrections_Dict_261_0_98(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double>* pobj;
         vector<double> xobj = ((MuonSmear::SmearingClass*) G__getstructoffset())->getCorrMatC0();
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonMomentumCorrections_Dict_261_0_99(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double>* pobj;
         vector<double> xobj = ((MuonSmear::SmearingClass*) G__getstructoffset())->getCorrMatC1();
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonMomentumCorrections_Dict_261_0_100(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double>* pobj;
         vector<double> xobj = ((MuonSmear::SmearingClass*) G__getstructoffset())->getCorrMatC2();
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonMomentumCorrections_Dict_261_0_101(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double>* pobj;
         vector<double> xobj = ((MuonSmear::SmearingClass*) G__getstructoffset())->getCorrMatC3();
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonMomentumCorrections_Dict_261_0_102(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double>* pobj;
         vector<double> xobj = ((MuonSmear::SmearingClass*) G__getstructoffset())->getCorrMatC4();
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonMomentumCorrections_Dict_261_0_103(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double>* pobj;
         vector<double> xobj = ((MuonSmear::SmearingClass*) G__getstructoffset())->getCorrMatC5();
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonMomentumCorrections_Dict_261_0_104(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double>* pobj;
         vector<double> xobj = ((MuonSmear::SmearingClass*) G__getstructoffset())->getCorrMatTanC0();
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonMomentumCorrections_Dict_261_0_105(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double>* pobj;
         vector<double> xobj = ((MuonSmear::SmearingClass*) G__getstructoffset())->getCorrMatTanC1();
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonMomentumCorrections_Dict_261_0_106(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double>* pobj;
         vector<double> xobj = ((MuonSmear::SmearingClass*) G__getstructoffset())->getCorrMatTanC2();
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonMomentumCorrections_Dict_261_0_107(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double>* pobj;
         vector<double> xobj = ((MuonSmear::SmearingClass*) G__getstructoffset())->getCorrMatTanC3();
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonMomentumCorrections_Dict_261_0_108(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double>* pobj;
         vector<double> xobj = ((MuonSmear::SmearingClass*) G__getstructoffset())->getCorrMatTanC4();
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonMomentumCorrections_Dict_261_0_109(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double>* pobj;
         vector<double> xobj = ((MuonSmear::SmearingClass*) G__getstructoffset())->getCorrMatTanC5();
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonMomentumCorrections_Dict_261_0_110(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MuonSmear::SmearingClass::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonMomentumCorrections_Dict_261_0_111(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MuonSmear::SmearingClass::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonMomentumCorrections_Dict_261_0_112(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MuonSmear::SmearingClass::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonMomentumCorrections_Dict_261_0_113(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MuonSmear::SmearingClass::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonMomentumCorrections_Dict_261_0_114(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MuonSmear::SmearingClass*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonMomentumCorrections_Dict_261_0_115(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MuonSmear::SmearingClass*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonMomentumCorrections_Dict_261_0_116(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MuonSmear::SmearingClass*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonMomentumCorrections_Dict_261_0_117(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MuonSmear::SmearingClass*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonMomentumCorrections_Dict_261_0_118(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MuonSmear::SmearingClass::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonMomentumCorrections_Dict_261_0_119(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MuonSmear::SmearingClass::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonMomentumCorrections_Dict_261_0_120(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MuonSmear::SmearingClass::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonMomentumCorrections_Dict_261_0_121(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MuonSmear::SmearingClass::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MuonSmear::SmearingClass G__TMuonSmearcLcLSmearingClass;
static int G__MuonMomentumCorrections_Dict_261_0_128(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MuonSmear::SmearingClass*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MuonSmear::SmearingClass*) (soff+(sizeof(MuonSmear::SmearingClass)*i)))->~G__TMuonSmearcLcLSmearingClass();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MuonSmear::SmearingClass*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MuonSmear::SmearingClass*) (soff))->~G__TMuonSmearcLcLSmearingClass();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Analysis */

/* Analysis::MuonResolutionAndMomentumScaleFactors */
static int G__MuonMomentumCorrections_Dict_263_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Analysis::MuonResolutionAndMomentumScaleFactors* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new Analysis::MuonResolutionAndMomentumScaleFactors(*(string*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) Analysis::MuonResolutionAndMomentumScaleFactors(*(string*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_AnalysiscLcLMuonResolutionAndMomentumScaleFactors));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonMomentumCorrections_Dict_263_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Analysis::MuonResolutionAndMomentumScaleFactors*) G__getstructoffset())->getResolutionScaleFactor(*(TLorentzVector*) libp->para[0].ref, (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonMomentumCorrections_Dict_263_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Analysis::MuonResolutionAndMomentumScaleFactors*) G__getstructoffset())->getResolutionScaleFactorError(*(TLorentzVector*) libp->para[0].ref, (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonMomentumCorrections_Dict_263_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Analysis::MuonResolutionAndMomentumScaleFactors*) G__getstructoffset())->getMomentumScaleFactor(*(TLorentzVector*) libp->para[0].ref, (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonMomentumCorrections_Dict_263_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Analysis::MuonResolutionAndMomentumScaleFactors*) G__getstructoffset())->getMomentumScaleFactorError(*(TLorentzVector*) libp->para[0].ref, (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__MuonMomentumCorrections_Dict_263_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   Analysis::MuonResolutionAndMomentumScaleFactors* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new Analysis::MuonResolutionAndMomentumScaleFactors(*(Analysis::MuonResolutionAndMomentumScaleFactors*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_AnalysiscLcLMuonResolutionAndMomentumScaleFactors));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Analysis::MuonResolutionAndMomentumScaleFactors G__TAnalysiscLcLMuonResolutionAndMomentumScaleFactors;
static int G__MuonMomentumCorrections_Dict_263_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Analysis::MuonResolutionAndMomentumScaleFactors*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Analysis::MuonResolutionAndMomentumScaleFactors*) (soff+(sizeof(Analysis::MuonResolutionAndMomentumScaleFactors)*i)))->~G__TAnalysiscLcLMuonResolutionAndMomentumScaleFactors();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Analysis::MuonResolutionAndMomentumScaleFactors*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Analysis::MuonResolutionAndMomentumScaleFactors*) (soff))->~G__TAnalysiscLcLMuonResolutionAndMomentumScaleFactors();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__MuonMomentumCorrections_Dict_263_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Analysis::MuonResolutionAndMomentumScaleFactors* dest = (Analysis::MuonResolutionAndMomentumScaleFactors*) G__getstructoffset();
   *dest = *(Analysis::MuonResolutionAndMomentumScaleFactors*) libp->para[0].ref;
   const Analysis::MuonResolutionAndMomentumScaleFactors& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* MuonSmear */

/* MuonSmear::SmearingClass */

/* Analysis */

/* Analysis::MuonResolutionAndMomentumScaleFactors */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncMuonMomentumCorrections_Dict {
 public:
  G__Sizep2memfuncMuonMomentumCorrections_Dict(): p(&G__Sizep2memfuncMuonMomentumCorrections_Dict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncMuonMomentumCorrections_Dict::*p)();
};

size_t G__get_sizep2memfuncMuonMomentumCorrections_Dict()
{
  G__Sizep2memfuncMuonMomentumCorrections_Dict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceMuonMomentumCorrections_Dict() {

   /* Setting up class inheritance */
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableMuonMomentumCorrections_Dict() {

   /* Setting up typedef entry */
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Float_t>",117,G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_TMatrixTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Float_t>",117,G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_TMatrixTRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Float_t>",117,G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_TMatrixTColumn_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Float_t>",117,G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_TMatrixTDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Float_t>",117,G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_TMatrixTFlat_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Float_t>",117,G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_TMatrixTSub_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Float_t>",117,G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_TMatrixTSparseRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Float_t>",117,G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_TMatrixTSparseDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Float_t>",117,G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_TMatrixTRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Float_t>",117,G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_TMatrixTColumnlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Float_t>",117,G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_TMatrixTDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Float_t>",117,G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_TMatrixTFlatlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Float_t>",117,G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_TMatrixTSublEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Float_t>",117,G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_TMatrixTSparseRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Float_t>",117,G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_TMatrixTSparseDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Float_t>",117,G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_TElementActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Float_t>",117,G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_TElementPosActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("SMEARTYPE",117,G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_MuonSmearcLcLSMEARTYPE),0,G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_MuonSmear));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("SCALETYPE",117,G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_MuonSmearcLcLSCALETYPE),0,G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_MuonSmear));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("DETTYPE",117,G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_MuonSmearcLcLDETTYPE),0,G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_MuonSmear));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("SYSTTYPE",117,G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_MuonSmearcLcLSYSTTYPE),0,G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_MuonSmear));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("DATATYPE",117,G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_MuonSmearcLcLDATATYPE),0,G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_MuonSmear));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("ALGOTYPE",117,G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_MuonSmearcLcLALGOTYPE),0,G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_MuonSmear));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("RELTYPE",117,G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_MuonSmearcLcLRELTYPE),0,G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_MuonSmear));
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* MuonSmear */
static void G__setup_memvarMuonSmear(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_MuonSmear));
   {
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_MuonSmearcLcLSMEARTYPE),-1,-2,1,G__FastAllocString(4096).Format("SMEAR_PT=%lldLL",(long long)MuonSmear::SMEAR_PT).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_MuonSmearcLcLSMEARTYPE),-1,-2,1,G__FastAllocString(4096).Format("SMEAR_QPT=%lldLL",(long long)MuonSmear::SMEAR_QPT).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_MuonSmearcLcLSCALETYPE),-1,-2,1,G__FastAllocString(4096).Format("SCALE_DEFAULT=%lldLL",(long long)MuonSmear::SCALE_DEFAULT).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_MuonSmearcLcLSCALETYPE),-1,-2,1,G__FastAllocString(4096).Format("SCALE_KPKM=%lldLL",(long long)MuonSmear::SCALE_KPKM).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_MuonSmearcLcLSCALETYPE),-1,-2,1,G__FastAllocString(4096).Format("SCALE_KC=%lldLL",(long long)MuonSmear::SCALE_KC).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_MuonSmearcLcLSCALETYPE),-1,-2,1,G__FastAllocString(4096).Format("SCALE_K=%lldLL",(long long)MuonSmear::SCALE_K).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_MuonSmearcLcLSCALETYPE),-1,-2,1,G__FastAllocString(4096).Format("SCALE_C=%lldLL",(long long)MuonSmear::SCALE_C).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_MuonSmearcLcLDETTYPE),-1,-2,1,G__FastAllocString(4096).Format("DET_MS=%lldLL",(long long)MuonSmear::DET_MS).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_MuonSmearcLcLDETTYPE),-1,-2,1,G__FastAllocString(4096).Format("DET_ID=%lldLL",(long long)MuonSmear::DET_ID).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_MuonSmearcLcLDETTYPE),-1,-2,1,G__FastAllocString(4096).Format("DET_CB=%lldLL",(long long)MuonSmear::DET_CB).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_MuonSmearcLcLSYSTTYPE),-1,-2,1,G__FastAllocString(4096).Format("ID_UP=%lldLL",(long long)MuonSmear::ID_UP).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_MuonSmearcLcLSYSTTYPE),-1,-2,1,G__FastAllocString(4096).Format("ID_LOW=%lldLL",(long long)MuonSmear::ID_LOW).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_MuonSmearcLcLSYSTTYPE),-1,-2,1,G__FastAllocString(4096).Format("MS_UP=%lldLL",(long long)MuonSmear::MS_UP).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_MuonSmearcLcLSYSTTYPE),-1,-2,1,G__FastAllocString(4096).Format("MS_LOW=%lldLL",(long long)MuonSmear::MS_LOW).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_MuonSmearcLcLSYSTTYPE),-1,-2,1,G__FastAllocString(4096).Format("SCALE_UP=%lldLL",(long long)MuonSmear::SCALE_UP).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_MuonSmearcLcLSYSTTYPE),-1,-2,1,G__FastAllocString(4096).Format("SCALE_LOW=%lldLL",(long long)MuonSmear::SCALE_LOW).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_MuonSmearcLcLDATATYPE),-1,-2,1,G__FastAllocString(4096).Format("DATA10=%lldLL",(long long)MuonSmear::DATA10).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_MuonSmearcLcLDATATYPE),-1,-2,1,G__FastAllocString(4096).Format("DATA11=%lldLL",(long long)MuonSmear::DATA11).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_MuonSmearcLcLDATATYPE),-1,-2,1,G__FastAllocString(4096).Format("DATA12=%lldLL",(long long)MuonSmear::DATA12).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_MuonSmearcLcLALGOTYPE),-1,-2,1,G__FastAllocString(4096).Format("MUID=%lldLL",(long long)MuonSmear::MUID).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_MuonSmearcLcLALGOTYPE),-1,-2,1,G__FastAllocString(4096).Format("STACO=%lldLL",(long long)MuonSmear::STACO).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_MuonSmearcLcLALGOTYPE),-1,-2,1,G__FastAllocString(4096).Format("MUONS=%lldLL",(long long)MuonSmear::MUONS).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_MuonSmearcLcLRELTYPE),-1,-2,1,G__FastAllocString(4096).Format("REL16_6=%lldLL",(long long)MuonSmear::REL16_6).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_MuonSmearcLcLRELTYPE),-1,-2,1,G__FastAllocString(4096).Format("REL17=%lldLL",(long long)MuonSmear::REL17).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_MuonSmearcLcLRELTYPE),-1,-2,1,G__FastAllocString(4096).Format("REL17_2=%lldLL",(long long)MuonSmear::REL17_2).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_MuonSmearcLcLRELTYPE),-1,-2,1,G__FastAllocString(4096).Format("REL17_2_REPRO=%lldLL",(long long)MuonSmear::REL17_2_REPRO).data(),0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MuonSmear::SmearingClass */
static void G__setup_memvarMuonSmearcLcLSmearingClass(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_MuonSmearcLcLSmearingClass));
   { MuonSmear::SmearingClass *p; p=(MuonSmear::SmearingClass*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ptms)-(long)(p)),100,0,0,-1,-1,-1,1,"ptms=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ptid)-(long)(p)),100,0,0,-1,-1,-1,1,"ptid=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ptcb)-(long)(p)),100,0,0,-1,-1,-1,1,"ptcb=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->eta)-(long)(p)),100,0,0,-1,-1,-1,1,"eta=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->phi)-(long)(p)),100,0,0,-1,-1,-1,1,"phi=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->charge)-(long)(p)),100,0,0,-1,-1,-1,1,"charge=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->vms)-(long)(p)),100,0,0,-1,-1,-1,1,"vms=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->vid)-(long)(p)),100,0,0,-1,-1,-1,1,"vid=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->corr)-(long)(p)),100,0,0,-1,-1,-1,1,"corr=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->smearDeltaMS)-(long)(p)),100,0,0,-1,-1,-1,1,"smearDeltaMS=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->smearDeltaID)-(long)(p)),100,0,0,-1,-1,-1,1,"smearDeltaID=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->smearDeltaCB)-(long)(p)),100,0,0,-1,-1,-1,1,"smearDeltaCB=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->useTan2)-(long)(p)),103,0,0,-1,-1,-1,1,"useTan2=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->detRegion)-(long)(p)),105,0,0,-1,-1,-1,1,"detRegion=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->scaleRegion)-(long)(p)),105,0,0,-1,-1,-1,1,"scaleRegion=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->GeV)-(long)(p)),100,0,0,-1,-1,-1,1,"GeV=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->g1)-(long)(p)),100,0,0,-1,-1,-1,1,"g1=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->g2)-(long)(p)),100,0,0,-1,-1,-1,1,"g2=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->g3)-(long)(p)),100,0,0,-1,-1,-1,1,"g3=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->g4)-(long)(p)),100,0,0,-1,-1,-1,1,"g4=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->wMS)-(long)(p)),100,0,0,-1,-1,-1,1,"wMS=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->wID)-(long)(p)),100,0,0,-1,-1,-1,1,"wID=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->useScale)-(long)(p)),103,0,0,-1,-1,-1,1,"useScale=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->restrictCurvCorrSigma)-(long)(p)),100,0,0,-1,-1,-1,1,"restrictCurvCorrSigma=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->InValues)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_basic_ifstreamlEcharcOchar_traitslEchargRsPgR),G__defined_typename("ifstream"),-1,1,"InValues=",0,"! don't persistify");
   G__memvar_setup((void*)((long)(&p->useImprovedCombine)-(long)(p)),103,0,0,-1,-1,-1,1,"useImprovedCombine=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->apply_to_data)-(long)(p)),103,0,0,-1,-1,-1,1,"apply_to_data=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,2,"m_CallSetClass=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"m_pTmax=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_string),-1,-1,2,"m_DataYear=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_string),-1,-1,2,"m_Fdir=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_string),-1,-1,2,"m_Release=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_string),-1,-1,2,"m_ScaleType=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_MuonSmearcLcLSMEARTYPE),G__defined_typename("SMEARTYPE"),-1,2,"Tsmear=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_MuonSmearcLcLSCALETYPE),G__defined_typename("SCALETYPE"),-1,2,"Tscale=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_MuonSmearcLcLDETTYPE),G__defined_typename("DETTYPE"),-1,2,"Tdet=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_MuonSmearcLcLSYSTTYPE),G__defined_typename("SYSTTYPE"),-1,2,"Tfun=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_MuonSmearcLcLDATATYPE),G__defined_typename("DATATYPE"),-1,2,"Tdata=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_MuonSmearcLcLRELTYPE),G__defined_typename("RELTYPE"),-1,2,"Trel=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_MuonSmearcLcLALGOTYPE),G__defined_typename("ALGOTYPE"),-1,2,"Talgo=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_string),-1,-1,2,"m_Algorithm=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,2,"m_scale_ID=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,2,"m_scaleSyst_ID=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,2,"m_scale_MS=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,2,"m_scaleSyst_MS=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,2,"m_scale_CB=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,2,"m_scaleSyst_CB=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,2,"m_scaleBins=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,2,"m_S1_ID=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,2,"m_S2_ID=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,2,"m_S1_MS=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,2,"m_S2_MS=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,2,"m_S1_CB=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,2,"m_S2_CB=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,2,"m_S1Corr_ID=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,2,"m_S2Corr_ID=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,2,"m_S1Corr_MS=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,2,"m_S2Corr_MS=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,2,"m_S1Corr_CB=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,2,"m_S2Corr_CB=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,2,"m_S1ACorr_ID=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,2,"m_S2ACorr_ID=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,2,"m_S1ACorr_MS=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,2,"m_S2ACorr_MS=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,2,"m_S1ACorr_CB=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,2,"m_S2ACorr_CB=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,2,"m_p1_ID=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,2,"m_p2_ID=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,2,"m_p2_ID_TAN=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,2,"m_p1_MS=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,2,"m_p2_MS=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,2,"m_E_p1_ID=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,2,"m_E_p2_ID=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,2,"m_E_p2_ID_TAN=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,2,"m_E_p1_MS=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,2,"m_E_p2_MS=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,2,"m_S_p1_ID=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,2,"m_S_p2_ID=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,2,"m_S_p2_ID_TAN=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,2,"m_S_p1_MS=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,2,"m_S_p2_MS=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,2,"m_MC_p1_ID=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,2,"m_MC_p2_ID=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,2,"m_MC_p2_ID_TAN=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,2,"m_MC_p0_MS=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,2,"m_MC_p1_MS=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,2,"m_MC_p2_MS=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,2,"m_CorrMatC0=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,2,"m_CorrMatC1=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,2,"m_CorrMatC2=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,2,"m_CorrMatC3=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,2,"m_CorrMatC4=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,2,"m_CorrMatC5=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,2,"m_CorrMatTanC0=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,2,"m_CorrMatTanC1=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,2,"m_CorrMatTanC2=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,2,"m_CorrMatTanC3=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,2,"m_CorrMatTanC4=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,2,"m_CorrMatTanC5=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_TRandom3),-1,-2,4,"m_rand=",0,(char*)NULL);
   G__memvar_setup((void*)0,114,0,0,-1,-1,-1,4,"m_nb_regions=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<float>"),-1,4,"m_eta_min=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<float>"),-1,4,"m_eta_max=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<float>"),-1,4,"m_phi_min=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<float>"),-1,4,"m_phi_max=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* Analysis */
static void G__setup_memvarAnalysis(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_Analysis));
   {
   }
   G__tag_memvar_reset();
}


   /* Analysis::MuonResolutionAndMomentumScaleFactors */
static void G__setup_memvarAnalysiscLcLMuonResolutionAndMomentumScaleFactors(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_AnalysiscLcLMuonResolutionAndMomentumScaleFactors));
   { Analysis::MuonResolutionAndMomentumScaleFactors *p; p=(Analysis::MuonResolutionAndMomentumScaleFactors*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"m_eta_min=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"m_eta_max=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"m_res_SF_CB=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"m_res_SF_CB_err=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"m_mom_SF_CB=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"m_mom_SF_CB_err=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"m_res_SF_ID=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"m_res_SF_ID_err=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"m_mom_SF_ID=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"m_mom_SF_ID_err=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"m_res_SF_SA=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"m_res_SF_SA_err=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"m_mom_SF_SA=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"m_mom_SF_SA_err=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarMuonMomentumCorrections_Dict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncMuonSmear(void) {
   /* MuonSmear */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_MuonSmear));
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMuonSmearcLcLSmearingClass(void) {
   /* MuonSmear::SmearingClass */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_MuonSmearcLcLSmearingClass));
   G__memfunc_setup("SmearingClass",1324,G__MuonMomentumCorrections_Dict_261_0_1, 105, G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_MuonSmearcLcLSmearingClass), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SmearingClass",1324,G__MuonMomentumCorrections_Dict_261_0_2, 105, G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_MuonSmearcLcLSmearingClass), -1, 0, 5, 1, 1, 0, 
"u 'string' - 0 - Data u 'string' - 0 '\"muid\"' Algo "
"u 'string' - 0 '\"q_pT\"' SmearType u 'string' - 0 '\"Rel16.6\"' Rel "
"u 'string' - 0 '\"\"' Dir", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SmearingClass",1324,G__MuonMomentumCorrections_Dict_261_0_3, 105, G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_MuonSmearcLcLSmearingClass), -1, 0, 1, 1, 1, 0, "u 'MuonSmear::SmearingClass' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetSeed",685,G__MuonMomentumCorrections_Dict_261_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetSeed",685,G__MuonMomentumCorrections_Dict_261_0_5, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - - i - - 0 - - "
"i - - 0 '680049' offset", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UseTan2",642,G__MuonMomentumCorrections_Dict_261_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "g - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UseGeV",559,G__MuonMomentumCorrections_Dict_261_0_7, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UseScale",789,G__MuonMomentumCorrections_Dict_261_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "g - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RestrictCurvatureCorrections",2972,G__MuonMomentumCorrections_Dict_261_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 '2.5' nsigma", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UseImprovedCombine",1840,G__MuonMomentumCorrections_Dict_261_0_10, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ApplyToData",1091,G__MuonMomentumCorrections_Dict_261_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "g - - 0 'true' U", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetAlgoSmearRelDir",1769,G__MuonMomentumCorrections_Dict_261_0_12, 121, -1, -1, 0, 5, 1, 1, 0, 
"u 'string' - 0 - - u 'string' - 0 - - "
"u 'string' - 0 '\"q_pT\"' SmearType u 'string' - 0 '\"Rel16.6\"' Rel "
"u 'string' - 0 '\"\"' Dir", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRegions",1027,G__MuonMomentumCorrections_Dict_261_0_13, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillValues",1015,G__MuonMomentumCorrections_Dict_261_0_14, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillScales",994,G__MuonMomentumCorrections_Dict_261_0_15, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 '\"KC\"' Scaletype g - - 0 'false' ApplyToData", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintValues",1149,G__MuonMomentumCorrections_Dict_261_0_16, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Event",514,G__MuonMomentumCorrections_Dict_261_0_17, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'TLorentzVector' - 11 - p u 'string' - 0 - DetType "
"d - - 0 '0' Charge", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Event",514,G__MuonMomentumCorrections_Dict_261_0_18, 121, -1, -1, 0, 5, 1, 1, 0, 
"d - - 0 - Pt d - - 0 - Eta "
"u 'string' - 0 - DetType d - - 0 '0' Charge "
"d - - 0 '0' Phi", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Event",514,G__MuonMomentumCorrections_Dict_261_0_19, 121, -1, -1, 0, 4, 1, 1, 0, 
"u 'TLorentzVector' - 11 - p_MS u 'TLorentzVector' - 11 - p_ID "
"u 'TLorentzVector' - 11 - p_CB d - - 0 '0' Charge", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Event",514,G__MuonMomentumCorrections_Dict_261_0_20, 121, -1, -1, 0, 6, 1, 1, 0, 
"d - - 0 - PtMS d - - 0 - PtID "
"d - - 0 - PtCB d - - 0 - Eta "
"d - - 0 '0' Charge d - - 0 '0' Phi", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Event",514,G__MuonMomentumCorrections_Dict_261_0_21, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Smearing",822,G__MuonMomentumCorrections_Dict_261_0_22, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SmearingSYSVar",1374,G__MuonMomentumCorrections_Dict_261_0_23, 100, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - - d - - 0 - var", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ICombine",774,G__MuonMomentumCorrections_Dict_261_0_24, 100, -1, -1, 0, 2, 1, 1, 0, 
"d - - 0 - - d - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Combine",701,G__MuonMomentumCorrections_Dict_261_0_25, 100, -1, -1, 0, 2, 1, 1, 0, 
"d - - 0 - - d - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Combine2",751,G__MuonMomentumCorrections_Dict_261_0_26, 100, -1, -1, 0, 2, 1, 1, 0, 
"d - - 0 - - d - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ExpectedResolution",1894,G__MuonMomentumCorrections_Dict_261_0_27, 100, -1, -1, 0, 2, 1, 1, 8, 
"u 'string' - 0 - DetType g - - 0 'false' mc", "!< Expected resolution in data (or unsmeard MC if second argument is true)", (void*) NULL, 0);
   G__memfunc_setup("ExpectedResolution",1894,G__MuonMomentumCorrections_Dict_261_0_28, 100, -1, -1, 0, 2, 1, 1, 8, 
"i - - 0 - DetType g - - 0 'false' mc", "!< Expected resolution in data (or unsmeard MC if second argument is true)", (void*) NULL, 0);
   G__memfunc_setup("ErrorMatrix",1151,G__MuonMomentumCorrections_Dict_261_0_29, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ScaleApply",1006,G__MuonMomentumCorrections_Dict_261_0_30, 100, -1, -1, 0, 4, 1, 1, 8, 
"d - - 0 - pt d - - 0 - S1 "
"d - - 0 - S2 d - - 0 '1.0' S", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ScaleMS",648,G__MuonMomentumCorrections_Dict_261_0_31, 100, -1, -1, 0, 1, 1, 1, 8, "d - - 0 - pt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ScaleID",629,G__MuonMomentumCorrections_Dict_261_0_32, 100, -1, -1, 0, 1, 1, 1, 8, "d - - 0 - pt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ScaleCB",621,G__MuonMomentumCorrections_Dict_261_0_33, 100, -1, -1, 0, 1, 1, 1, 8, "d - - 0 - pt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pTMS",356,G__MuonMomentumCorrections_Dict_261_0_34, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pTMS",356,G__MuonMomentumCorrections_Dict_261_0_35, 100, -1, -1, 0, 2, 1, 1, 0, 
"d - - 0 - SmearMS g - - 0 'true' doScale", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pTID",337,G__MuonMomentumCorrections_Dict_261_0_36, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pTID",337,G__MuonMomentumCorrections_Dict_261_0_37, 100, -1, -1, 0, 2, 1, 1, 0, 
"d - - 0 - SmearID g - - 0 'true' doScale", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pTCB",329,G__MuonMomentumCorrections_Dict_261_0_38, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pTCB",329,G__MuonMomentumCorrections_Dict_261_0_39, 100, -1, -1, 0, 2, 1, 1, 0, 
"d - - 0 - SmearCB g - - 0 'true' doScale", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ChargeFlip",981,G__MuonMomentumCorrections_Dict_261_0_40, 100, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ChargeFlipMS",1141,G__MuonMomentumCorrections_Dict_261_0_41, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ChargeFlipID",1122,G__MuonMomentumCorrections_Dict_261_0_42, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ChargeFlipCB",1114,G__MuonMomentumCorrections_Dict_261_0_43, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SMS",243,G__MuonMomentumCorrections_Dict_261_0_44, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SID",224,G__MuonMomentumCorrections_Dict_261_0_45, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SCB",216,G__MuonMomentumCorrections_Dict_261_0_46, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("VMS",246,G__MuonMomentumCorrections_Dict_261_0_47, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("VID",227,G__MuonMomentumCorrections_Dict_261_0_48, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Corr",406,G__MuonMomentumCorrections_Dict_261_0_49, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MSUP",325,G__MuonMomentumCorrections_Dict_261_0_50, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - - 1 - - g - - 0 'false' useErrMatrix", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MSUP",325,G__MuonMomentumCorrections_Dict_261_0_51, 121, -1, -1, 0, 4, 1, 1, 0, 
"d - - 1 - - d - - 1 - - "
"d - - 1 - - g - - 0 'false' useErrMatrix", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MSLOW",402,G__MuonMomentumCorrections_Dict_261_0_52, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - - 1 - - g - - 0 'false' useErrMatrix", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MSLOW",402,G__MuonMomentumCorrections_Dict_261_0_53, 121, -1, -1, 0, 4, 1, 1, 0, 
"d - - 1 - - d - - 1 - - "
"d - - 1 - - g - - 0 'false' useErrMatrix", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IDUP",306,G__MuonMomentumCorrections_Dict_261_0_54, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - - 1 - - g - - 0 'false' useErrMatrix", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IDUP",306,G__MuonMomentumCorrections_Dict_261_0_55, 121, -1, -1, 0, 4, 1, 1, 0, 
"d - - 1 - - d - - 1 - - "
"d - - 1 - - g - - 0 'false' useErrMatrix", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IDLOW",383,G__MuonMomentumCorrections_Dict_261_0_56, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - - 1 - - g - - 0 'false' useErrMatrix", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IDLOW",383,G__MuonMomentumCorrections_Dict_261_0_57, 121, -1, -1, 0, 4, 1, 1, 0, 
"d - - 1 - - d - - 1 - - "
"d - - 1 - - g - - 0 'false' useErrMatrix", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SelectFun",905,G__MuonMomentumCorrections_Dict_261_0_58, 105, G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_MuonSmearcLcLSYSTTYPE), G__defined_typename("MuonSmear::SYSTTYPE"), 0, 1, 1, 1, 0, "u 'string' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetData",678,G__MuonMomentumCorrections_Dict_261_0_59, 105, G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_MuonSmearcLcLDATATYPE), G__defined_typename("MuonSmear::DATATYPE"), 0, 1, 1, 1, 0, "u 'string' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetAlgorithm",1235,G__MuonMomentumCorrections_Dict_261_0_60, 105, G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_MuonSmearcLcLALGOTYPE), G__defined_typename("MuonSmear::ALGOTYPE"), 0, 1, 1, 1, 0, "u 'string' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRelease",1005,G__MuonMomentumCorrections_Dict_261_0_61, 105, G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_MuonSmearcLcLRELTYPE), G__defined_typename("MuonSmear::RELTYPE"), 0, 1, 1, 1, 0, "u 'string' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PTVar",461,G__MuonMomentumCorrections_Dict_261_0_62, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - - 1 - - u 'string' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PTVar",461,G__MuonMomentumCorrections_Dict_261_0_63, 121, -1, -1, 0, 4, 1, 1, 0, 
"d - - 1 - - d - - 1 - - "
"d - - 1 - - u 'string' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Sign",401,G__MuonMomentumCorrections_Dict_261_0_64, 100, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ptms_orig",980,G__MuonMomentumCorrections_Dict_261_0_65, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ptid_orig",961,G__MuonMomentumCorrections_Dict_261_0_66, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ptcb_orig",953,G__MuonMomentumCorrections_Dict_261_0_67, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ETA",218,G__MuonMomentumCorrections_Dict_261_0_68, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DetRegion",897,G__MuonMomentumCorrections_Dict_261_0_69, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetScaleRegion",1388,G__MuonMomentumCorrections_Dict_261_0_70, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getScale_ID",1044,G__MuonMomentumCorrections_Dict_261_0_71, 117, G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getScaleSyst_ID",1479,G__MuonMomentumCorrections_Dict_261_0_72, 117, G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getScale_MS",1063,G__MuonMomentumCorrections_Dict_261_0_73, 117, G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getScaleSyst_MS",1498,G__MuonMomentumCorrections_Dict_261_0_74, 117, G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getScale_CB",1036,G__MuonMomentumCorrections_Dict_261_0_75, 117, G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getScaleSyst_CB",1471,G__MuonMomentumCorrections_Dict_261_0_76, 117, G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getp1_ID",717,G__MuonMomentumCorrections_Dict_261_0_77, 117, G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getp2_ID",718,G__MuonMomentumCorrections_Dict_261_0_78, 117, G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getp2_ID_TAN",1040,G__MuonMomentumCorrections_Dict_261_0_79, 117, G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getp1_MS",736,G__MuonMomentumCorrections_Dict_261_0_80, 117, G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getp2_MS",737,G__MuonMomentumCorrections_Dict_261_0_81, 117, G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getE_p1_ID",881,G__MuonMomentumCorrections_Dict_261_0_82, 117, G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getE_p2_ID",882,G__MuonMomentumCorrections_Dict_261_0_83, 117, G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getE_p2_ID_TAN",1204,G__MuonMomentumCorrections_Dict_261_0_84, 117, G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getE_p1_MS",900,G__MuonMomentumCorrections_Dict_261_0_85, 117, G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getE_p2_MS",901,G__MuonMomentumCorrections_Dict_261_0_86, 117, G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getS_p1_ID",895,G__MuonMomentumCorrections_Dict_261_0_87, 117, G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getS_p2_ID",896,G__MuonMomentumCorrections_Dict_261_0_88, 117, G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getS_p2_ID_TAN",1218,G__MuonMomentumCorrections_Dict_261_0_89, 117, G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getS_p1_MS",914,G__MuonMomentumCorrections_Dict_261_0_90, 117, G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getS_p2_MS",915,G__MuonMomentumCorrections_Dict_261_0_91, 117, G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getMC_p1_ID",956,G__MuonMomentumCorrections_Dict_261_0_92, 117, G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getMC_p2_ID",957,G__MuonMomentumCorrections_Dict_261_0_93, 117, G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getMC_p2_ID_TAN",1279,G__MuonMomentumCorrections_Dict_261_0_94, 117, G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getMC_p0_MS",974,G__MuonMomentumCorrections_Dict_261_0_95, 117, G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getMC_p1_MS",975,G__MuonMomentumCorrections_Dict_261_0_96, 117, G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getMC_p2_MS",976,G__MuonMomentumCorrections_Dict_261_0_97, 117, G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getCorrMatC0",1131,G__MuonMomentumCorrections_Dict_261_0_98, 117, G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getCorrMatC1",1132,G__MuonMomentumCorrections_Dict_261_0_99, 117, G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getCorrMatC2",1133,G__MuonMomentumCorrections_Dict_261_0_100, 117, G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getCorrMatC3",1134,G__MuonMomentumCorrections_Dict_261_0_101, 117, G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getCorrMatC4",1135,G__MuonMomentumCorrections_Dict_261_0_102, 117, G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getCorrMatC5",1136,G__MuonMomentumCorrections_Dict_261_0_103, 117, G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getCorrMatTanC0",1422,G__MuonMomentumCorrections_Dict_261_0_104, 117, G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getCorrMatTanC1",1423,G__MuonMomentumCorrections_Dict_261_0_105, 117, G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getCorrMatTanC2",1424,G__MuonMomentumCorrections_Dict_261_0_106, 117, G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getCorrMatTanC3",1425,G__MuonMomentumCorrections_Dict_261_0_107, 117, G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getCorrMatTanC4",1426,G__MuonMomentumCorrections_Dict_261_0_108, 117, G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getCorrMatTanC5",1427,G__MuonMomentumCorrections_Dict_261_0_109, 117, G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__MuonMomentumCorrections_Dict_261_0_110, 85, G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MuonSmear::SmearingClass::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__MuonMomentumCorrections_Dict_261_0_111, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MuonSmear::SmearingClass::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__MuonMomentumCorrections_Dict_261_0_112, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MuonSmear::SmearingClass::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__MuonMomentumCorrections_Dict_261_0_113, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MuonSmear::SmearingClass::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__MuonMomentumCorrections_Dict_261_0_114, 85, G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__MuonMomentumCorrections_Dict_261_0_115, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__MuonMomentumCorrections_Dict_261_0_116, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__MuonMomentumCorrections_Dict_261_0_117, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__MuonMomentumCorrections_Dict_261_0_118, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MuonSmear::SmearingClass::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__MuonMomentumCorrections_Dict_261_0_119, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MuonSmear::SmearingClass::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__MuonMomentumCorrections_Dict_261_0_120, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MuonSmear::SmearingClass::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__MuonMomentumCorrections_Dict_261_0_121, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MuonSmear::SmearingClass::DeclFileLine) ), 0);
   G__memfunc_setup("Initialize",1042,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 5, 1, 4, 0, 
"u 'string' - 0 - data u 'string' - 0 - algo "
"u 'string' - 0 - smearType u 'string' - 0 - rel "
"u 'string' - 0 - dir", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Finalize",818,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clean",483,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CleanScales",1086,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getRegion",932,(G__InterfaceMethod) NULL, 105, -1, -1, 0, 2, 1, 4, 0, 
"d - - 0 - eta d - - 0 - phi", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getRegionOld",1219,(G__InterfaceMethod) NULL, 105, -1, -1, 0, 1, 1, 4, 0, "d - - 0 - eta", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~SmearingClass", 1450, G__MuonMomentumCorrections_Dict_261_0_128, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncAnalysis(void) {
   /* Analysis */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_Analysis));
   G__tag_memfunc_reset();
}

static void G__setup_memfuncAnalysiscLcLMuonResolutionAndMomentumScaleFactors(void) {
   /* Analysis::MuonResolutionAndMomentumScaleFactors */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_AnalysiscLcLMuonResolutionAndMomentumScaleFactors));
   G__memfunc_setup("MuonResolutionAndMomentumScaleFactors",3826,G__MuonMomentumCorrections_Dict_263_0_1, 105, G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_AnalysiscLcLMuonResolutionAndMomentumScaleFactors), -1, 0, 1, 1, 1, 0, "u 'string' - 11 - data_filename", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getResolutionScaleFactor",2491,G__MuonMomentumCorrections_Dict_263_0_2, 100, -1, -1, 0, 2, 1, 1, 0, 
"u 'TLorentzVector' - 11 - p i - - 0 - type", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getResolutionScaleFactorError",3013,G__MuonMomentumCorrections_Dict_263_0_3, 100, -1, -1, 0, 2, 1, 1, 0, 
"u 'TLorentzVector' - 11 - p i - - 0 - type", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getMomentumScaleFactor",2265,G__MuonMomentumCorrections_Dict_263_0_4, 100, -1, -1, 0, 2, 1, 1, 0, 
"u 'TLorentzVector' - 11 - p i - - 0 - type", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getMomentumScaleFactorError",2787,G__MuonMomentumCorrections_Dict_263_0_5, 100, -1, -1, 0, 2, 1, 1, 0, 
"u 'TLorentzVector' - 11 - p i - - 0 - type", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getEtaBin",883,(G__InterfaceMethod) NULL, 104, -1, -1, 0, 1, 1, 4, 0, "u 'TLorentzVector' - 11 - p", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("MuonResolutionAndMomentumScaleFactors", 3826, G__MuonMomentumCorrections_Dict_263_0_7, (int) ('i'), 
G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_AnalysiscLcLMuonResolutionAndMomentumScaleFactors), -1, 0, 1, 1, 1, 0, "u 'Analysis::MuonResolutionAndMomentumScaleFactors' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MuonResolutionAndMomentumScaleFactors", 3952, G__MuonMomentumCorrections_Dict_263_0_8, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__MuonMomentumCorrections_Dict_263_0_9, (int) ('u'), G__get_linked_tagnum(&G__MuonMomentumCorrections_DictLN_AnalysiscLcLMuonResolutionAndMomentumScaleFactors), -1, 1, 1, 1, 1, 0, "u 'Analysis::MuonResolutionAndMomentumScaleFactors' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncMuonMomentumCorrections_Dict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalMuonMomentumCorrections_Dict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcMuonMomentumCorrections_Dict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__MuonMomentumCorrections_DictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__MuonMomentumCorrections_DictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__MuonMomentumCorrections_DictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__MuonMomentumCorrections_DictLN_vectorlEfloatcOallocatorlEfloatgRsPgR = { "vector<float,allocator<float> >" , 99 , -1 };
G__linked_taginfo G__MuonMomentumCorrections_DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR = { "vector<double,allocator<double> >" , 99 , -1 };
G__linked_taginfo G__MuonMomentumCorrections_DictLN_basic_ifstreamlEcharcOchar_traitslEchargRsPgR = { "basic_ifstream<char,char_traits<char> >" , 99 , -1 };
G__linked_taginfo G__MuonMomentumCorrections_DictLN_string = { "string" , 99 , -1 };
G__linked_taginfo G__MuonMomentumCorrections_DictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__MuonMomentumCorrections_DictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__MuonMomentumCorrections_DictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__MuonMomentumCorrections_DictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__MuonMomentumCorrections_DictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__MuonMomentumCorrections_DictLN_TRandom3 = { "TRandom3" , 99 , -1 };
G__linked_taginfo G__MuonMomentumCorrections_DictLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__MuonMomentumCorrections_DictLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__MuonMomentumCorrections_DictLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__MuonMomentumCorrections_DictLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__MuonMomentumCorrections_DictLN_TElementActionTlEfloatgR = { "TElementActionT<float>" , 99 , -1 };
G__linked_taginfo G__MuonMomentumCorrections_DictLN_TElementPosActionTlEfloatgR = { "TElementPosActionT<float>" , 99 , -1 };
G__linked_taginfo G__MuonMomentumCorrections_DictLN_TMatrixTlEfloatgR = { "TMatrixT<float>" , 99 , -1 };
G__linked_taginfo G__MuonMomentumCorrections_DictLN_TMatrixTRow_constlEfloatgR = { "TMatrixTRow_const<float>" , 99 , -1 };
G__linked_taginfo G__MuonMomentumCorrections_DictLN_TMatrixTRowlEfloatgR = { "TMatrixTRow<float>" , 99 , -1 };
G__linked_taginfo G__MuonMomentumCorrections_DictLN_TMatrixTDiag_constlEfloatgR = { "TMatrixTDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__MuonMomentumCorrections_DictLN_TMatrixTColumn_constlEfloatgR = { "TMatrixTColumn_const<float>" , 99 , -1 };
G__linked_taginfo G__MuonMomentumCorrections_DictLN_TMatrixTFlat_constlEfloatgR = { "TMatrixTFlat_const<float>" , 99 , -1 };
G__linked_taginfo G__MuonMomentumCorrections_DictLN_TMatrixTSub_constlEfloatgR = { "TMatrixTSub_const<float>" , 99 , -1 };
G__linked_taginfo G__MuonMomentumCorrections_DictLN_TMatrixTSparseRow_constlEfloatgR = { "TMatrixTSparseRow_const<float>" , 99 , -1 };
G__linked_taginfo G__MuonMomentumCorrections_DictLN_TMatrixTSparseDiag_constlEfloatgR = { "TMatrixTSparseDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__MuonMomentumCorrections_DictLN_TMatrixTColumnlEfloatgR = { "TMatrixTColumn<float>" , 99 , -1 };
G__linked_taginfo G__MuonMomentumCorrections_DictLN_TMatrixTDiaglEfloatgR = { "TMatrixTDiag<float>" , 99 , -1 };
G__linked_taginfo G__MuonMomentumCorrections_DictLN_TMatrixTFlatlEfloatgR = { "TMatrixTFlat<float>" , 99 , -1 };
G__linked_taginfo G__MuonMomentumCorrections_DictLN_TMatrixTSublEfloatgR = { "TMatrixTSub<float>" , 99 , -1 };
G__linked_taginfo G__MuonMomentumCorrections_DictLN_TMatrixTSparseRowlEfloatgR = { "TMatrixTSparseRow<float>" , 99 , -1 };
G__linked_taginfo G__MuonMomentumCorrections_DictLN_TMatrixTSparseDiaglEfloatgR = { "TMatrixTSparseDiag<float>" , 99 , -1 };
G__linked_taginfo G__MuonMomentumCorrections_DictLN_TLorentzVector = { "TLorentzVector" , 99 , -1 };
G__linked_taginfo G__MuonMomentumCorrections_DictLN_MuonSmear = { "MuonSmear" , 110 , -1 };
G__linked_taginfo G__MuonMomentumCorrections_DictLN_MuonSmearcLcLSMEARTYPE = { "MuonSmear::SMEARTYPE" , 101 , -1 };
G__linked_taginfo G__MuonMomentumCorrections_DictLN_MuonSmearcLcLSCALETYPE = { "MuonSmear::SCALETYPE" , 101 , -1 };
G__linked_taginfo G__MuonMomentumCorrections_DictLN_MuonSmearcLcLDETTYPE = { "MuonSmear::DETTYPE" , 101 , -1 };
G__linked_taginfo G__MuonMomentumCorrections_DictLN_MuonSmearcLcLSYSTTYPE = { "MuonSmear::SYSTTYPE" , 101 , -1 };
G__linked_taginfo G__MuonMomentumCorrections_DictLN_MuonSmearcLcLDATATYPE = { "MuonSmear::DATATYPE" , 101 , -1 };
G__linked_taginfo G__MuonMomentumCorrections_DictLN_MuonSmearcLcLALGOTYPE = { "MuonSmear::ALGOTYPE" , 101 , -1 };
G__linked_taginfo G__MuonMomentumCorrections_DictLN_MuonSmearcLcLRELTYPE = { "MuonSmear::RELTYPE" , 101 , -1 };
G__linked_taginfo G__MuonMomentumCorrections_DictLN_MuonSmearcLcLSmearingClass = { "MuonSmear::SmearingClass" , 99 , -1 };
G__linked_taginfo G__MuonMomentumCorrections_DictLN_Analysis = { "Analysis" , 110 , -1 };
G__linked_taginfo G__MuonMomentumCorrections_DictLN_AnalysiscLcLMuonResolutionAndMomentumScaleFactors = { "Analysis::MuonResolutionAndMomentumScaleFactors" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableMuonMomentumCorrections_Dict() {
  G__MuonMomentumCorrections_DictLN_TClass.tagnum = -1 ;
  G__MuonMomentumCorrections_DictLN_TBuffer.tagnum = -1 ;
  G__MuonMomentumCorrections_DictLN_TMemberInspector.tagnum = -1 ;
  G__MuonMomentumCorrections_DictLN_vectorlEfloatcOallocatorlEfloatgRsPgR.tagnum = -1 ;
  G__MuonMomentumCorrections_DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR.tagnum = -1 ;
  G__MuonMomentumCorrections_DictLN_basic_ifstreamlEcharcOchar_traitslEchargRsPgR.tagnum = -1 ;
  G__MuonMomentumCorrections_DictLN_string.tagnum = -1 ;
  G__MuonMomentumCorrections_DictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__MuonMomentumCorrections_DictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__MuonMomentumCorrections_DictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__MuonMomentumCorrections_DictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__MuonMomentumCorrections_DictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__MuonMomentumCorrections_DictLN_TRandom3.tagnum = -1 ;
  G__MuonMomentumCorrections_DictLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__MuonMomentumCorrections_DictLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__MuonMomentumCorrections_DictLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__MuonMomentumCorrections_DictLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__MuonMomentumCorrections_DictLN_TElementActionTlEfloatgR.tagnum = -1 ;
  G__MuonMomentumCorrections_DictLN_TElementPosActionTlEfloatgR.tagnum = -1 ;
  G__MuonMomentumCorrections_DictLN_TMatrixTlEfloatgR.tagnum = -1 ;
  G__MuonMomentumCorrections_DictLN_TMatrixTRow_constlEfloatgR.tagnum = -1 ;
  G__MuonMomentumCorrections_DictLN_TMatrixTRowlEfloatgR.tagnum = -1 ;
  G__MuonMomentumCorrections_DictLN_TMatrixTDiag_constlEfloatgR.tagnum = -1 ;
  G__MuonMomentumCorrections_DictLN_TMatrixTColumn_constlEfloatgR.tagnum = -1 ;
  G__MuonMomentumCorrections_DictLN_TMatrixTFlat_constlEfloatgR.tagnum = -1 ;
  G__MuonMomentumCorrections_DictLN_TMatrixTSub_constlEfloatgR.tagnum = -1 ;
  G__MuonMomentumCorrections_DictLN_TMatrixTSparseRow_constlEfloatgR.tagnum = -1 ;
  G__MuonMomentumCorrections_DictLN_TMatrixTSparseDiag_constlEfloatgR.tagnum = -1 ;
  G__MuonMomentumCorrections_DictLN_TMatrixTColumnlEfloatgR.tagnum = -1 ;
  G__MuonMomentumCorrections_DictLN_TMatrixTDiaglEfloatgR.tagnum = -1 ;
  G__MuonMomentumCorrections_DictLN_TMatrixTFlatlEfloatgR.tagnum = -1 ;
  G__MuonMomentumCorrections_DictLN_TMatrixTSublEfloatgR.tagnum = -1 ;
  G__MuonMomentumCorrections_DictLN_TMatrixTSparseRowlEfloatgR.tagnum = -1 ;
  G__MuonMomentumCorrections_DictLN_TMatrixTSparseDiaglEfloatgR.tagnum = -1 ;
  G__MuonMomentumCorrections_DictLN_TLorentzVector.tagnum = -1 ;
  G__MuonMomentumCorrections_DictLN_MuonSmear.tagnum = -1 ;
  G__MuonMomentumCorrections_DictLN_MuonSmearcLcLSMEARTYPE.tagnum = -1 ;
  G__MuonMomentumCorrections_DictLN_MuonSmearcLcLSCALETYPE.tagnum = -1 ;
  G__MuonMomentumCorrections_DictLN_MuonSmearcLcLDETTYPE.tagnum = -1 ;
  G__MuonMomentumCorrections_DictLN_MuonSmearcLcLSYSTTYPE.tagnum = -1 ;
  G__MuonMomentumCorrections_DictLN_MuonSmearcLcLDATATYPE.tagnum = -1 ;
  G__MuonMomentumCorrections_DictLN_MuonSmearcLcLALGOTYPE.tagnum = -1 ;
  G__MuonMomentumCorrections_DictLN_MuonSmearcLcLRELTYPE.tagnum = -1 ;
  G__MuonMomentumCorrections_DictLN_MuonSmearcLcLSmearingClass.tagnum = -1 ;
  G__MuonMomentumCorrections_DictLN_Analysis.tagnum = -1 ;
  G__MuonMomentumCorrections_DictLN_AnalysiscLcLMuonResolutionAndMomentumScaleFactors.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableMuonMomentumCorrections_Dict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__MuonMomentumCorrections_DictLN_TClass);
   G__get_linked_tagnum_fwd(&G__MuonMomentumCorrections_DictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__MuonMomentumCorrections_DictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__MuonMomentumCorrections_DictLN_vectorlEfloatcOallocatorlEfloatgRsPgR);
   G__get_linked_tagnum_fwd(&G__MuonMomentumCorrections_DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR);
   G__get_linked_tagnum_fwd(&G__MuonMomentumCorrections_DictLN_basic_ifstreamlEcharcOchar_traitslEchargRsPgR);
   G__get_linked_tagnum_fwd(&G__MuonMomentumCorrections_DictLN_string);
   G__get_linked_tagnum_fwd(&G__MuonMomentumCorrections_DictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__MuonMomentumCorrections_DictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__MuonMomentumCorrections_DictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__MuonMomentumCorrections_DictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__MuonMomentumCorrections_DictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__MuonMomentumCorrections_DictLN_TRandom3);
   G__get_linked_tagnum_fwd(&G__MuonMomentumCorrections_DictLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__MuonMomentumCorrections_DictLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__MuonMomentumCorrections_DictLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__MuonMomentumCorrections_DictLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__MuonMomentumCorrections_DictLN_TElementActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__MuonMomentumCorrections_DictLN_TElementPosActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__MuonMomentumCorrections_DictLN_TMatrixTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__MuonMomentumCorrections_DictLN_TMatrixTRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__MuonMomentumCorrections_DictLN_TMatrixTRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__MuonMomentumCorrections_DictLN_TMatrixTDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__MuonMomentumCorrections_DictLN_TMatrixTColumn_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__MuonMomentumCorrections_DictLN_TMatrixTFlat_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__MuonMomentumCorrections_DictLN_TMatrixTSub_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__MuonMomentumCorrections_DictLN_TMatrixTSparseRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__MuonMomentumCorrections_DictLN_TMatrixTSparseDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__MuonMomentumCorrections_DictLN_TMatrixTColumnlEfloatgR);
   G__get_linked_tagnum_fwd(&G__MuonMomentumCorrections_DictLN_TMatrixTDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__MuonMomentumCorrections_DictLN_TMatrixTFlatlEfloatgR);
   G__get_linked_tagnum_fwd(&G__MuonMomentumCorrections_DictLN_TMatrixTSublEfloatgR);
   G__get_linked_tagnum_fwd(&G__MuonMomentumCorrections_DictLN_TMatrixTSparseRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__MuonMomentumCorrections_DictLN_TMatrixTSparseDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__MuonMomentumCorrections_DictLN_TLorentzVector);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__MuonMomentumCorrections_DictLN_MuonSmear),0,-1,0,(char*)NULL,G__setup_memvarMuonSmear,G__setup_memfuncMuonSmear);
   G__get_linked_tagnum_fwd(&G__MuonMomentumCorrections_DictLN_MuonSmearcLcLSMEARTYPE);
   G__get_linked_tagnum_fwd(&G__MuonMomentumCorrections_DictLN_MuonSmearcLcLSCALETYPE);
   G__get_linked_tagnum_fwd(&G__MuonMomentumCorrections_DictLN_MuonSmearcLcLDETTYPE);
   G__get_linked_tagnum_fwd(&G__MuonMomentumCorrections_DictLN_MuonSmearcLcLSYSTTYPE);
   G__get_linked_tagnum_fwd(&G__MuonMomentumCorrections_DictLN_MuonSmearcLcLDATATYPE);
   G__get_linked_tagnum_fwd(&G__MuonMomentumCorrections_DictLN_MuonSmearcLcLALGOTYPE);
   G__get_linked_tagnum_fwd(&G__MuonMomentumCorrections_DictLN_MuonSmearcLcLRELTYPE);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__MuonMomentumCorrections_DictLN_MuonSmearcLcLSmearingClass),sizeof(MuonSmear::SmearingClass),-1,296704,(char*)NULL,G__setup_memvarMuonSmearcLcLSmearingClass,G__setup_memfuncMuonSmearcLcLSmearingClass);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__MuonMomentumCorrections_DictLN_Analysis),0,-1,0,(char*)NULL,G__setup_memvarAnalysis,G__setup_memfuncAnalysis);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__MuonMomentumCorrections_DictLN_AnalysiscLcLMuonResolutionAndMomentumScaleFactors),sizeof(Analysis::MuonResolutionAndMomentumScaleFactors),-1,294912,(char*)NULL,G__setup_memvarAnalysiscLcLMuonResolutionAndMomentumScaleFactors,G__setup_memfuncAnalysiscLcLMuonResolutionAndMomentumScaleFactors);
}
extern "C" void G__cpp_setupMuonMomentumCorrections_Dict(void) {
  G__check_setup_version(30051515,"G__cpp_setupMuonMomentumCorrections_Dict()");
  G__set_cpp_environmentMuonMomentumCorrections_Dict();
  G__cpp_setup_tagtableMuonMomentumCorrections_Dict();

  G__cpp_setup_inheritanceMuonMomentumCorrections_Dict();

  G__cpp_setup_typetableMuonMomentumCorrections_Dict();

  G__cpp_setup_memvarMuonMomentumCorrections_Dict();

  G__cpp_setup_memfuncMuonMomentumCorrections_Dict();
  G__cpp_setup_globalMuonMomentumCorrections_Dict();
  G__cpp_setup_funcMuonMomentumCorrections_Dict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncMuonMomentumCorrections_Dict();
  return;
}
class G__cpp_setup_initMuonMomentumCorrections_Dict {
  public:
    G__cpp_setup_initMuonMomentumCorrections_Dict() { G__add_setup_func("MuonMomentumCorrections_Dict",(G__incsetup)(&G__cpp_setupMuonMomentumCorrections_Dict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initMuonMomentumCorrections_Dict() { G__remove_setup_func("MuonMomentumCorrections_Dict"); }
};
G__cpp_setup_initMuonMomentumCorrections_Dict G__cpp_setup_initializerMuonMomentumCorrections_Dict;

